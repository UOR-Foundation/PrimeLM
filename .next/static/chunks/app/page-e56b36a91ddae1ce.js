(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[974],{143:()=>{},1934:(e,t,n)=>{Promise.resolve().then(n.bind(n,4182))},2009:()=>{},2603:()=>{},3052:()=>{},4182:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>x});var i=n(5155),o=n(2115),a=n(7228);class s{async bootstrapFromTokenizer(){console.log("\uD83D\uDD27 Bootstrapping chatbot knowledge from tokenizer...");try{let e=await this.extractTokenizerVocabulary();console.log("\uD83D\uDCDA Extracted ".concat(e.length," vocabulary words"));let t=await this.generateVocabularyEmbeddings(e);console.log("\uD83E\uDDE0 Generated embeddings for ".concat(t.size," words"));let n=this.buildSemanticClusters(t);console.log("\uD83D\uDD17 Built semantic clusters for ".concat(n.size," concepts"));let i=this.createKnowledgeBase(t,n);return console.log("✅ Knowledge base bootstrap complete"),i}catch(e){throw console.error("❌ Knowledge bootstrap failed:",e),Error("Knowledge bootstrap failed: ".concat(e instanceof Error?e.message:String(e)))}}async extractTokenizerVocabulary(){console.log("\uD83D\uDD0D Attempting to extract tokenizer vocabulary...");let e=this.embeddingPipeline.tokenizer;if(console.log("Tokenizer available:",!!e),!e)throw Error("Tokenizer not available in embedding pipeline");console.log("Tokenizer properties:",Object.keys(e));let t=null;if(e.model&&e.model.vocab){let n=e.model.vocab;console.log("Vocab object type:",typeof n),console.log("Vocab object keys sample:",Object.keys(n).slice(0,20));let i=Object.keys(n)[0],o=n[i];console.log("First vocab entry:",i,"->",o),"number"==typeof o?(t=Object.keys(n),console.log("Found word->ID mapping, using keys as vocabulary")):"string"==typeof i&&/^\d+$/.test(i)?(t=Object.values(n),console.log("Found ID->word mapping, using values as vocabulary")):(t=Object.keys(n),console.log("Using keys as vocabulary (default)")),console.log("Extracted vocab length:",t.length),console.log("Sample vocab words:",t.slice(0,20))}else if(e.vocab)console.log("Found vocab via tokenizer.vocab:",(t=Object.keys(e.vocab)).length);else if(e.getVocab)console.log("Found vocab via tokenizer.getVocab():",(t=Object.keys(e.getVocab())).length);else throw Error("Unable to access tokenizer vocabulary - no known vocabulary access method found");if(!t||0===t.length)throw Error("Tokenizer vocabulary is empty or null");let n=this.filterMeaningfulWords(t);if(console.log("Filtered vocabulary:",n.length),0===n.length)throw Error("No meaningful words found in tokenizer vocabulary after filtering");return n}filterMeaningfulWords(e){if(console.log("\uD83D\uDD0D Filtering vocabulary from",e.length,"words"),console.log("Sample vocab words:",e.slice(0,20)),e.slice(0,100).every(e=>/^\d+$/.test(e)))throw Error("Detected numeric tokenizer with token IDs instead of vocabulary words - cannot extract meaningful vocabulary");let t=e.filter(e=>!(e.startsWith("[")||e.startsWith("<")||e.startsWith("##")||e.length<2||e.length>15||/^\d+$/.test(e))&&!!/^[a-zA-Z]+$/.test(e)).slice(0,800);return console.log("Filtered to",t.length,"meaningful words"),console.log("Sample filtered words:",t.slice(0,20)),t}async generateVocabularyEmbeddings(e){let t=new Map;for(let n=0;n<e.length;n+=50){for(let i of e.slice(n,n+50))try{let e=await this.embeddingPipeline(i),n=Array.from(e.data);t.set(i,n)}catch(e){console.warn("⚠️ Failed to generate embedding for word: ".concat(i))}n+50<e.length&&await new Promise(e=>setTimeout(e,10))}return t}buildSemanticClusters(e){let t=new Map;for(let[n,i]of e){let o=this.findSimilarWords(n,i,e);t.set(n,o)}return t}findSimilarWords(e,t,n){let i=[];for(let[o,a]of n)if(o!==e){let e=this.calculateCosineSimilarity(t,a);i.push({word:o,similarity:e})}return i.sort((e,t)=>t.similarity-e.similarity).slice(0,5).map(e=>e.word)}calculateCosineSimilarity(e,t){let n=e.reduce((e,n,i)=>e+n*t[i],0),i=Math.sqrt(e.reduce((e,t)=>e+t*t,0)),o=Math.sqrt(t.reduce((e,t)=>e+t*t,0));return i&&o?n/(i*o):0}createKnowledgeBase(e,t){let n=new Map,i=new Map;for(let[o,a]of e){let e=this.embeddingsToPrimes(a),s=t.get(o)||[];n.set(o,{word:o,embedding:a,primeFactors:e,similarWords:s}),i.set(o,e)}return{vocabulary:n,semanticClusters:t,conceptEmbeddings:e,vocabularyPrimes:i}}embeddingsToPrimes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.02,n=this.generatePrimes(e.length),i={};return e.forEach((e,o)=>{if(Math.abs(e)>t){let t=n[o%n.length],a=Math.floor(1e3*Math.abs(e))+1;i[t]=(i[t]||0)+a}}),i}generatePrimes(e){let t=[2],n=3;for(;t.length<e;){let e=!0;for(let i=0;i<t.length&&t[i]*t[i]<=n;i++)if(n%t[i]==0){e=!1;break}e&&t.push(n),n+=2}return t}constructor(e){this.embeddingPipeline=e}}class r{findMostResonantWords(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:3;console.log("\uD83D\uDD22 Finding resonant words using direct prime comparison..."),console.log("Input primes:",this.formatPrimes(e));let i=[];for(let[n,o]of t){let t=this.calculatePrimeResonance(e,o),a=this.findSharedPrimes(e,o),s=this.findHarmonicMatches(e,o),r=this.calculateCoherenceScore(e,o);i.push({word:n,resonance:t,sharedPrimes:a,harmonicMatches:s,coherenceScore:r})}let o=i.sort((e,t)=>t.resonance-e.resonance).slice(0,2*n).filter(e=>e.resonance>0);return console.log("Top resonance results:",o.slice(0,5).map(e=>"".concat(e.word,": ").concat(e.resonance.toFixed(1)," (shared: ").concat(e.sharedPrimes.length,", harmonic: ").concat(e.harmonicMatches.length,")"))),o.slice(0,n)}calculatePrimeResonance(e,t){let n=0;for(let[i,o]of Object.entries(e)){let e=t[parseInt(i)];e&&(n+=Math.sqrt(o*e))}return n+.3*this.calculateHarmonicResonance(e,t)}findSharedPrimes(e,t){let n=[];for(let i of Object.keys(e)){let e=parseInt(i);t[e]&&n.push(e)}return n.sort((e,t)=>e-t)}findHarmonicMatches(e,t){let n=[];for(let[i]of Object.entries(e)){let e=parseInt(i);for(let i of[2*e,3*e,e+2,e-2,Math.floor(e/2),Math.floor(e/3)].filter(e=>e>1&&Number.isInteger(e)))t[i]&&n.push(i)}return[...new Set(n)].sort((e,t)=>e-t)}calculateHarmonicResonance(e,t){let n=0;for(let[i,o]of Object.entries(e)){let e=parseInt(i);for(let i of[2*e,e+2,e-2]){let e=t[i];e&&(n+=.5*Math.sqrt(o*e))}}return n}calculateCoherenceScore(e,t){let n={};for(let[i,o]of Object.entries(e)){let e=parseInt(i),a=t[e];a&&(n[e]=Math.sqrt(o*a))}let i=this.calculateMagnitude(n),o=Math.sqrt(this.calculateMagnitude(e)*this.calculateMagnitude(t));return o>0?i/o:0}calculateMagnitude(e){return Math.sqrt(Object.values(e).reduce((e,t)=>e+t*t,0))}formatPrimes(e){let t=Object.entries(e).sort((e,t)=>{let[,n]=e,[,i]=t;return i-n}).slice(0,5).map(e=>{let[t,n]=e;return"".concat(t,":").concat(Math.floor(n))});return"{".concat(t.join(", "),"}")}applyContextualWeighting(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:1.5,i=t.join(" ").toLowerCase().split(/\W+/).filter(e=>e.length>2);return e.map(e=>{let t=e.resonance;return i.includes(e.word.toLowerCase())&&(t*=n,console.log('\uD83C\uDFAF Context boost for "'.concat(e.word,'": ').concat(e.resonance.toFixed(1)," → ").concat(t.toFixed(1)))),{...e,resonance:t}})}}class c{static generatePrimes(e){if(this.primes.length>=e)return this.primes.slice(0,e);let t=[2],n=3;for(;t.length<e;){let e=!0;for(let i=0;i<t.length&&t[i]*t[i]<=n;i++)if(n%t[i]==0){e=!1;break}e&&t.push(n),n+=2}return this.primes=t,t}static embeddingsToPrimes(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:.02,n=this.generatePrimes(e.length),i={};return e.forEach((e,o)=>{if(Math.abs(e)>t){let t=n[o%n.length],a=Math.floor(1e3*Math.abs(e))+1;i[t]=(i[t]||0)+a}}),i}static calculateCoherence(e,t){let n={};Object.keys(e).forEach(i=>{let o=parseInt(i);t[o]&&(n[o]=Math.sqrt(e[o]*t[o]))});let i=this.calculateMagnitude(n),o=Math.sqrt(this.calculateMagnitude(e)*this.calculateMagnitude(t));return o>0?i/o:0}static calculateMagnitude(e){return Math.sqrt(Object.values(e).reduce((e,t)=>e+t*t,0))}static combineFactors(e,t){let n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:.5,i={};return Object.entries(e).forEach(e=>{let[t,o]=e;i[parseInt(t)]=Math.floor(o*n)}),Object.entries(t).forEach(e=>{let[t,o]=e,a=parseInt(t);i[a]=(i[a]||0)+Math.floor(o*(1-n))}),i}}c.primes=[];class l{initializeBasicSchema(){this.addEntity("Thing",{type:"Thing",properties:["name","description","identifier"],relationships:[],parentTypes:[],description:"The most generic type of item"}),this.addEntity("Person",{type:"Person",properties:["name","givenName","familyName","email","telephone"],relationships:["knows","owns","memberOf","worksFor"],parentTypes:["Thing"],description:"A person (alive, dead, undead, or fictional)"}),this.addEntity("Animal",{type:"Animal",properties:["name","species","breed","age","color"],relationships:["ownedBy","livesAt","relatedTo"],parentTypes:["Thing"],description:"Animals including pets, wildlife, etc."}),this.addEntity("Place",{type:"Place",properties:["name","address","geo","telephone"],relationships:["containedInPlace","contains","near"],parentTypes:["Thing"],description:"Entities that have a somewhat fixed, physical extension"}),this.addEntity("Organization",{type:"Organization",properties:["name","description","email","telephone","address"],relationships:["member","parentOrganization","subOrganization"],parentTypes:["Thing"],description:"An organization such as a school, NGO, corporation, club, etc."}),this.addEntity("Vehicle",{type:"Vehicle",properties:["name","model","manufacturer","color","year"],relationships:["ownedBy","locatedAt"],parentTypes:["Thing"],description:"A vehicle is a device that is designed or used to transport people or cargo"}),this.addEntity("Product",{type:"Product",properties:["name","description","brand","model","color"],relationships:["ownedBy","manufacturedBy"],parentTypes:["Thing"],description:"Any offered product or service"}),this.addRelationship("hasName",{property:"hasName",domain:["Thing"],range:["Text"],description:"The name of the item"}),this.addRelationship("owns",{property:"owns",domain:["Person"],range:["Thing"],description:"Products owned by the person"}),this.addRelationship("ownedBy",{property:"ownedBy",domain:["Thing"],range:["Person"],description:"The person who owns this item"}),this.addRelationship("knows",{property:"knows",domain:["Person"],range:["Person"],description:"The most generic bi-directional social/work relation"}),this.addRelationship("livesAt",{property:"livesAt",domain:["Person","Animal"],range:["Place"],description:"The place where the person or animal lives"}),this.addRelationship("worksFor",{property:"worksFor",domain:["Person"],range:["Organization"],description:"Organizations that the person works for"}),console.log("\uD83D\uDCDA Schema.org vocabulary initialized with",this.entities.size,"entities and",this.relationships.size,"relationships")}addEntity(e,t){this.entities.set(e,t)}addRelationship(e,t){this.relationships.set(e,t)}inferEntityType(e,t){let n=e.toLowerCase(),i={dog:"Animal",cat:"Animal",pet:"Animal",bird:"Animal",fish:"Animal",horse:"Animal",car:"Vehicle",truck:"Vehicle",bike:"Vehicle",motorcycle:"Vehicle",house:"Place",home:"Place",office:"Place",school:"Place",company:"Organization",business:"Organization",team:"Organization",friend:"Person",family:"Person",brother:"Person",sister:"Person",mother:"Person",father:"Person",phone:"Product",computer:"Product",book:"Product"},o=i[n];return o?(console.log("\uD83D\uDD0D Inferred entity type: ".concat(e," → ").concat(o)),o):t&&t.includes("name")&&!i[n]?"Person":null}getValidRelationships(e){let t=this.entities.get(e);if(!t)return[];let n=[...t.relationships];return t.parentTypes.forEach(e=>{let t=this.entities.get(e);t&&n.push(...t.relationships)}),[...new Set(n)]}getValidProperties(e){let t=this.entities.get(e);if(!t)return[];let n=[...t.properties];return t.parentTypes.forEach(e=>{let t=this.entities.get(e);t&&n.push(...t.properties)}),[...new Set(n)]}parseSemanticRelationships(e){console.log("\uD83D\uDD0D Parsing semantic relationships in:",e);let t=e.match(/my\s+(\w+)'?s?\s+name\s+is\s+(\w+)/i);if(t){let e=t[1],n=t[2],i=this.inferEntityType(e);return{subject:{text:e,type:i},predicate:"hasName",object:{text:n,type:"Text"},confidence:.9}}let n=e.match(/i\s+have\s+a\s+(\w+)/i);if(n){let e=n[1],t=this.inferEntityType(e);return{subject:{text:"I",type:"Person"},predicate:"owns",object:{text:e,type:t},confidence:.8}}let i=e.match(/my\s+name\s+is\s+(\w+)/i);return i?{subject:{text:"I",type:"Person"},predicate:"hasName",object:{text:i[1],type:"Text"},confidence:.95}:null}generateSemanticQuery(e){console.log("\uD83D\uDD0D Generating semantic query for:",e);let t=e.match(/what\s+is\s+my\s+(\w+)'?s?\s+(\w+)/i);if(t){let e=t[1],n=t[2],i=this.inferEntityType(e);if("name"===n)return{queryType:"retrieve",subject:e,predicate:"hasName",entityType:i||void 0}}return/what\s+is\s+my\s+name/i.test(e)?{queryType:"retrieve",subject:"user",predicate:"hasName"}:null}getEntityInfo(e){return this.entities.get(e)||null}getRelationshipInfo(e){return this.relationships.get(e)||null}isValidRelationship(e,t,n){let i=this.relationships.get(t);if(!i)return!1;let o=i.domain.includes(e)||i.domain.includes("Thing"),a=i.range.includes(n)||i.range.includes("Thing")||i.range.includes("Text");return o&&a}getAllEntityTypes(){return Array.from(this.entities.keys())}getAllRelationshipTypes(){return Array.from(this.relationships.keys())}getDebugInfo(){return{entityCount:this.entities.size,relationshipCount:this.relationships.size,entities:Object.fromEntries(this.entities),relationships:Object.fromEntries(this.relationships)}}constructor(){this.entities=new Map,this.relationships=new Map,this.initializeBasicSchema()}}class h{initializePatterns(){this.patterns=[{pattern:/my name is (\w+)/i,intent:"IDENTITY_INTRODUCTION",semanticBoosts:["name","identity","person","individual","called","known"],responseTemplate:"Nice to meet you, {name}! I'm PrimeBot."},{pattern:/i am (\w+)/i,intent:"IDENTITY_INTRODUCTION",semanticBoosts:["name","identity","person","individual"],responseTemplate:"Nice to meet you, {name}! I'm PrimeBot."},{pattern:/my (\w+)'?s? name is (\w+)/i,intent:"ENTITY_INTRODUCTION",semanticBoosts:["name","identity","called","known","entity"],responseTemplate:"Nice to know that your {entity} is named {name}!"},{pattern:/her name is (\w+)/i,intent:"ENTITY_INTRODUCTION",semanticBoosts:["name","identity","called","known","entity"],responseTemplate:"Nice to know that her name is {name}!"},{pattern:/his name is (\w+)/i,intent:"ENTITY_INTRODUCTION",semanticBoosts:["name","identity","called","known","entity"],responseTemplate:"Nice to know that his name is {name}!"},{pattern:/what is my name/i,intent:"IDENTITY_QUERY",semanticBoosts:["name","identity","remember","recall","called","known"],responseTemplate:"Based on our conversation, your name is {name}."},{pattern:/what is my (\w+)'?s? name/i,intent:"ENTITY_QUERY",semanticBoosts:["name","identity","remember","recall","called","known"],responseTemplate:"Based on our conversation, your {entity} is named {name}."},{pattern:/what is my (\w+)'s name/i,intent:"ENTITY_QUERY",semanticBoosts:["name","identity","remember","recall","called","known"],responseTemplate:"Based on our conversation, your {entity} is named {name}."},{pattern:/who am i/i,intent:"IDENTITY_QUERY",semanticBoosts:["identity","person","individual","self","me"]},{pattern:/who are you/i,intent:"BOT_IDENTITY_QUERY",semanticBoosts:["identity","bot","assistant","who","you"],responseTemplate:"I'm PrimeBot, an AI assistant powered by mathematical prime factorization."},{pattern:/what is your name/i,intent:"BOT_IDENTITY_QUERY",semanticBoosts:["name","identity","bot","assistant"],responseTemplate:"My name is PrimeBot."},{pattern:/^(hello|hi|hey|greetings)/i,intent:"GREETING",semanticBoosts:["hello","greeting","welcome","salutation","social","friendly"],responseTemplate:"Hello! I'm PrimeBot. How can I help you today?"},{pattern:/good (morning|afternoon|evening)/i,intent:"GREETING",semanticBoosts:["greeting","time","polite","social","welcome"]},{pattern:/^what\s+is\s+my\s+name/i,intent:"IDENTITY_QUERY",semanticBoosts:["name","identity","remember","recall","called","known"],responseTemplate:"Based on our conversation, your name is {name}."},{pattern:/^what (is|are|was|were)/i,intent:"INFORMATION_REQUEST",semanticBoosts:["question","information","explain","definition","knowledge"]},{pattern:/^(how|why|when|where)/i,intent:"INFORMATION_REQUEST",semanticBoosts:["question","inquiry","explanation","information","help"]},{pattern:/\?$/,intent:"QUESTION",semanticBoosts:["question","inquiry","ask","information","help"]},{pattern:/(help|assist|support)/i,intent:"HELP_REQUEST",semanticBoosts:["help","assist","support","aid","guidance","service"],responseTemplate:"I'm here to help! What would you like to know or discuss?"},{pattern:/(thank|thanks|grateful)/i,intent:"GRATITUDE",semanticBoosts:["thanks","gratitude","appreciation","polite","positive"],responseTemplate:"You're welcome! I'm glad I could help."},{pattern:/(good|great|excellent|awesome|wonderful)/i,intent:"POSITIVE_FEEDBACK",semanticBoosts:["good","positive","approval","satisfaction","pleased"],responseTemplate:"That's wonderful! Is there anything else I can help you with?"},{pattern:/(understand|know|learn|explain)/i,intent:"KNOWLEDGE_REQUEST",semanticBoosts:["understand","knowledge","learn","explain","information","teach"]}]}analyzeSemanticContext(e){console.log("\uD83E\uDDE0 Analyzing semantic context for:",e);let t=null,n=0,i=[];for(let o of this.patterns){let a=e.match(o.pattern);if(a){t=o,n=.8,a.length>1&&(i=a.slice(1));break}}if(!t){let t=this.extractKeywords(e),n=this.getSemanticBoostsFromKeywords(t);return{intent:"GENERAL_CONVERSATION",entities:t,semanticBoosts:n,confidence:.3}}return console.log("\uD83C\uDFAF Detected intent:",t.intent),console.log("\uD83D\uDD17 Semantic boosts:",t.semanticBoosts),console.log("\uD83D\uDCDD Entities:",i),{intent:t.intent,entities:i,semanticBoosts:t.semanticBoosts,confidence:n}}extractKeywords(e){return e.toLowerCase().split(/\W+/).filter(e=>e.length>2).filter(e=>!this.isStopWord(e))}isStopWord(e){return["the","and","or","but","in","on","at","to","for","of","with","by","is","are","was","were","be","been","have","has","had","do","does","did","will","would","could","should","may","might","can"].includes(e)}getSemanticBoostsFromKeywords(e){let t={name:["identity","person","individual","called","known"],hello:["greeting","welcome","social","friendly"],help:["assist","support","aid","guidance"],what:["question","information","inquiry"],how:["method","process","way","explanation"],why:["reason","cause","explanation","purpose"],when:["time","schedule","timing"],where:["location","place","position"],who:["person","identity","individual"],good:["positive","quality","approval"],bad:["negative","problem","issue"],like:["preference","enjoy","positive"],love:["strong_positive","emotion","preference"],hate:["strong_negative","dislike","emotion"],want:["desire","need","request"],need:["requirement","necessity","important"],think:["opinion","belief","cognitive"],feel:["emotion","sensation","experience"],know:["knowledge","information","understanding"],understand:["comprehension","knowledge","clarity"],learn:["education","knowledge","growth"],teach:["education","instruction","knowledge"],work:["job","employment","activity","function"],play:["recreation","fun","game","entertainment"],time:["temporal","schedule","duration"],place:["location","position","area"],thing:["object","item","entity"],person:["individual","human","people"],people:["group","humans","social"],family:["relatives","relationship","personal"],friend:["social","relationship","personal"],home:["residence","place","personal"],school:["education","learning","institution"],book:["reading","knowledge","information"],computer:["technology","digital","tool"],phone:["communication","technology","contact"],car:["transportation","vehicle","travel"],food:["nutrition","eating","sustenance"],water:["drink","liquid","essential"],money:["finance","currency","value"],job:["work","employment","career"]},n=[];for(let i of e)t[i]&&n.push(...t[i]),n.push(i);return[...new Set(n)]}generateContextualResponse(e,t,n){console.log("\uD83C\uDFAD Generating knowledge-driven response for intent:",e.intent);let i=t[t.length-1]||"",o=this.schemaVocabulary.parseSemanticRelationships(i),a=this.schemaVocabulary.generateSemanticQuery(i);return(console.log("\uD83D\uDD0D Semantic relationship:",o),console.log("\uD83D\uDD0D Semantic query:",a),(null==a?void 0:a.queryType)==="retrieve")?this.handleSemanticRetrieval(a,t,e):o&&o.confidence>.8?this.handleSemanticRelationship(o,e):this.generateIntentBasedResponse(e,t,n)}handleSemanticRetrieval(e,t,n){let i=t.join(" ").toLowerCase();if("hasName"===e.predicate)if("user"===e.subject){let e=i.match(/my name is (\w+)/i);return e?"Your name is ".concat(e[1],"."):"I don't recall you mentioning your name. What is your name?"}else{let t=e.subject,n=RegExp("my ".concat(t,"'?s? name is (\\w+)"),"i"),o=i.match(n);if(o){let e=o[1],n=this.schemaVocabulary.inferEntityType(t);return"Your ".concat(t," is named ").concat(e,".")+(n?" That's a lovely name for ".concat("Animal"===n?"an animal":"a "+n.toLowerCase(),"."):"")}return"I don't recall you mentioning your ".concat(t,"'s name. What is your ").concat(t,"'s name?")}return"I'm processing that semantic query. Could you provide more details?"}handleSemanticRelationship(e,t){let{subject:n,predicate:i,object:o}=e;if("hasName"===i)if("I"===n.text)return"Nice to meet you, ".concat(o.text,"! I'm PrimeBot. How can I assist you today?");else{let e=this.schemaVocabulary.inferEntityType(n.text),t=e?this.schemaVocabulary.getEntityInfo(e):null,i="Nice to know that your ".concat(n.text," is named ").concat(o.text,"!");return t&&e&&(this.schemaVocabulary.getValidProperties(e),this.schemaVocabulary.getValidRelationships(e),"Animal"===e?i+=" Tell me more about ".concat(o.text," - what kind of ").concat(n.text," is ").concat(o.text,"?"):"Vehicle"===e?i+=" What kind of ".concat(n.text," is ").concat(o.text,"?"):i+=" Tell me more about ".concat(o.text,".")),i}return"owns"===i?this.schemaVocabulary.inferEntityType(o.text)?"That's wonderful that you have ".concat("a"===o.text?"a":""," ").concat(o.text,"! What's special about your ").concat(o.text,"?"):"Interesting that you have ".concat(o.text,". Tell me more about it!"):"That's interesting! I'm learning about the relationships you're describing."}generateIntentBasedResponse(e,t,n){switch(e.intent){case"GREETING":return"Hello! I'm PrimeBot, powered by mathematical prime factorization and semantic understanding. How can I help you today?";case"HELP_REQUEST":return"I'm here to help! I can understand relationships between people, animals, places, and things. What would you like to know or discuss?";case"GRATITUDE":return"You're welcome! I'm glad I could help with my semantic understanding.";case"POSITIVE_FEEDBACK":return"That's wonderful! Is there anything else I can help you understand or explore?";case"INFORMATION_REQUEST":case"QUESTION":if(n.length>0){let e=this.schemaVocabulary.inferEntityType(n[0]);if(e)return this.schemaVocabulary.getEntityInfo(e),"I'm analyzing \"".concat(n[0],'" as ').concat("Animal"===e?"an":"a"," ").concat(e,". ")+"What specifically would you like to know about ".concat(n[0],"?");return"I'm processing information about \"".concat(n[0],'" through my semantic understanding. What specifically would you like to know?')}return"That's a great question! I'm analyzing the semantic relationships to provide you with an answer.";case"KNOWLEDGE_REQUEST":return"I process information through mathematical analysis and semantic understanding using Schema.org vocabulary. What would you like me to understand?";case"GENERAL_CONVERSATION":if(n.length>0){let e=this.schemaVocabulary.inferEntityType(n[0]);if(e)return'I notice you mentioned "'.concat(n[0],'" - I understand that as ').concat("Animal"===e?"an":"a"," ").concat(e,". Tell me more about it!");return'I notice you mentioned "'.concat(n[0],"\". That's interesting! Tell me more about it.")}return"I'm listening and ready to understand the semantic relationships in what you're telling me. What would you like to discuss?";default:return null}}enhanceResonanceWithSemantics(e,t){return console.log("\uD83D\uDD2E Enhancing resonance with semantic awareness..."),e.map(e=>{let n=e.resonance;return t.semanticBoosts.includes(e.word)&&(n*=2,console.log('\uD83C\uDFAF Semantic boost for "'.concat(e.word,'": ').concat(e.resonance.toFixed(1)," → ").concat(n.toFixed(1)))),t.confidence>.7&&(n*=1.3),{word:e.word,resonance:n}})}extractEntitiesFromContext(e){let t=new Map,n=e.join(" ").match(/my name is (\w+)/i);return n&&t.set("user_name",n[1]),t}constructor(){this.patterns=[],this.conceptNetCache=new Map,this.schemaVocabulary=new l,this.initializePatterns()}}class u{processTurn(e,t,n,i,o){console.log("\uD83C\uDFAF Pragmatic Layer processing turn..."),console.log("Speaker:",e,"Intent:",n),console.log("Entities:",i);let a={id:"turn-".concat(Date.now(),"-").concat(Math.random().toString(36).substr(2,9)),timestamp:Date.now(),speaker:e,text:t,intent:n,entities:i,context:o};return this.context.conversationHistory.push(a),this.maintainHistoryLength(),this.updateEntityMemory(i),this.updateIntentTracking(n,i),this.updateCurrentTopic(n,i,t),this.updateConversationGoals(n,i),console.log("\uD83C\uDFAF Updated context - Topic:",this.context.currentTopic),console.log("\uD83C\uDFAF Active intents:",this.context.activeIntents),console.log("\uD83C\uDFAF Entity memory size:",this.context.entityMemory.size),{...this.context}}updateEntityMemory(e){Object.entries(e).forEach(e=>{let[t,n]=e;if(n&&"string"==typeof n&&n.length>0){var i;let e={value:n,lastMentioned:Date.now(),mentionCount:((null==(i=this.context.entityMemory.get(t))?void 0:i.mentionCount)||0)+1,context:this.context.currentTopic};this.context.entityMemory.set(t,e),console.log("\uD83D\uDCBE Stored entity: ".concat(t," = ").concat(n))}}),this.handleSpecialEntityPatterns(e)}handleSpecialEntityPatterns(e){var t,n;if(e.entityType&&e.entityName){let t="".concat(e.entityType,"_name"),n={value:e.entityName,entityType:e.entityType,relationship:"hasName",lastMentioned:Date.now(),mentionCount:1};this.context.entityMemory.set(t,n),console.log("\uD83D\uDD17 Stored relationship: ".concat(e.entityType," hasName ").concat(e.entityName))}e.userName&&this.context.entityMemory.set("user_name",{value:e.userName,relationship:"identity",lastMentioned:Date.now(),mentionCount:((null==(t=this.context.entityMemory.get("user_name"))?void 0:t.mentionCount)||0)+1});let i=Object.values(e);if(1===i.length&&"string"==typeof i[0]){let e=i[0];e.length>1&&e[0].toUpperCase()===e[0]&&(this.context.entityMemory.set("user_name",{value:e,relationship:"identity",lastMentioned:Date.now(),mentionCount:((null==(n=this.context.entityMemory.get("user_name"))?void 0:n.mentionCount)||0)+1}),console.log("\uD83D\uDC64 Stored user name: ".concat(e)))}if(2===i.length){let[e,t]=i;if(e&&t&&t[0].toUpperCase()===t[0]){let n="".concat(e,"_name"),i={value:t,entityType:e,relationship:"hasName",lastMentioned:Date.now(),mentionCount:1};this.context.entityMemory.set(n,i),console.log("\uD83D\uDD17 Stored relationship: ".concat(e," hasName ").concat(t))}}if(3===i.length){let[e,t,n]=i;if(("her"===e||"his"===e)&&"name"===t&&n[0].toUpperCase()===n[0]){let t=this.findRecentEntityForPronoun(e);if(t){let i="".concat(t,"_name"),o={value:n,entityType:t,relationship:"hasName",lastMentioned:Date.now(),mentionCount:1};this.context.entityMemory.set(i,o),console.log("\uD83D\uDD17 Stored pronoun relationship: ".concat(t," hasName ").concat(n," (via ").concat(e,")"))}}}}updateIntentTracking(e,t){if(this.activeIntents.has(e)){let n=this.activeIntents.get(e);n.confidence=Math.min(n.confidence+.1,1),n.turnsSinceActivation=0,n.parameters={...n.parameters,...t}}else this.activeIntents.set(e,{intent:e,confidence:.8,parameters:t,isActive:!0,turnsSinceActivation:0});for(let[t,n]of this.activeIntents)t!==e&&(n.turnsSinceActivation++,n.confidence=Math.max(n.confidence-.05,0),(n.turnsSinceActivation>5||n.confidence<.2)&&(n.isActive=!1));this.context.activeIntents=Array.from(this.activeIntents.values()).filter(e=>e.isActive).map(e=>e.intent)}updateCurrentTopic(e,t,n){let i=null;if("ENTITY_INTRODUCTION"===e||"ENTITY_QUERY"===e)t.entityType&&(i="".concat(t.entityType,"_discussion"));else if("IDENTITY_INTRODUCTION"===e||"IDENTITY_QUERY"===e)i="identity_discussion";else if("GREETING"===e)i="greeting_exchange";else if("HELP_REQUEST"===e)i="assistance_request";else if("INFORMATION_REQUEST"===e){let e=this.extractKeywords(n);e.length>0&&(i="".concat(e[0],"_information"))}i&&i!==this.context.currentTopic&&(this.context.currentTopic=i)}updateConversationGoals(e,t){let n=this.context.conversationGoals;switch(e){case"HELP_REQUEST":n.includes("provide_assistance")||n.push("provide_assistance");break;case"INFORMATION_REQUEST":n.includes("provide_information")||n.push("provide_information");break;case"IDENTITY_INTRODUCTION":n.includes("build_rapport")||n.push("build_rapport");break;case"ENTITY_INTRODUCTION":n.includes("learn_about_user")||n.push("learn_about_user")}n.length>5&&(this.context.conversationGoals=n.slice(-5))}extractKeywords(e){return e.toLowerCase().split(/\W+/).filter(e=>e.length>3).filter(e=>!this.isStopWord(e)).slice(0,3)}isStopWord(e){return["what","when","where","how","why","who","this","that","with","from","they","them","their","there","then","than","these","those"].includes(e)}maintainHistoryLength(){this.context.conversationHistory.length>this.maxHistoryLength&&(this.context.conversationHistory=this.context.conversationHistory.slice(-this.maxHistoryLength))}queryEntityMemory(e){let t=this.context.entityMemory.get(e);return t?(console.log("\uD83D\uDD0D Retrieved entity: ".concat(e," = ").concat(t.value)),t):null}queryEntityRelationship(e,t){let n="".concat(e,"_").concat(t);return this.queryEntityMemory(n)}getContextForResponse(){let e=this.context.conversationHistory.slice(-5),t={},n=Date.now()-3e5;for(let[e,i]of this.context.entityMemory)(i.lastMentioned>n||this.context.currentTopic&&i.context===this.context.currentTopic)&&(t[e]=i);return{recentHistory:e,currentTopic:this.context.currentTopic,activeIntents:this.context.activeIntents,relevantEntities:t,conversationGoals:this.context.conversationGoals}}shouldContinueThread(e){let t=Array.from(this.activeIntents.values()).filter(e=>e.isActive),n=this.getRelatedIntents(e);return t.some(e=>n.includes(e.intent)&&e.confidence>.5)}getRelatedIntents(e){return({IDENTITY_QUERY:["IDENTITY_INTRODUCTION","ENTITY_QUERY"],ENTITY_QUERY:["ENTITY_INTRODUCTION","IDENTITY_QUERY"],INFORMATION_REQUEST:["HELP_REQUEST","KNOWLEDGE_REQUEST"],HELP_REQUEST:["INFORMATION_REQUEST","KNOWLEDGE_REQUEST"]})[e]||[]}resetContext(){this.context={currentTopic:null,activeIntents:[],entityMemory:new Map,conversationGoals:[],userPreferences:{},conversationHistory:[]},this.activeIntents.clear(),console.log("\uD83D\uDD04 Pragmatic context reset")}findRecentEntityForPronoun(e){let t=this.context.conversationHistory.slice(-3);for(let n=t.length-1;n>=0;n--){let i=t[n];if("ENTITY_QUERY"===i.intent)for(let t of Object.keys(i.entities)){let n=i.entities[t];if("string"==typeof n&&n.length>2){if("her"===e&&this.isFemalePronounEntity(n))return n;else if("his"===e&&this.isMalePronounEntity(n))return n;else if("is"!==n&&"name"!==n)return n}}}return null}isFemalePronounEntity(e){return["wife","mother","sister","daughter","girlfriend","aunt","grandmother"].includes(e.toLowerCase())}isMalePronounEntity(e){return["husband","father","brother","son","boyfriend","uncle","grandfather"].includes(e.toLowerCase())}getDebugInfo(){return{currentTopic:this.context.currentTopic,activeIntents:this.context.activeIntents,entityMemorySize:this.context.entityMemory.size,entityMemory:Object.fromEntries(this.context.entityMemory),conversationGoals:this.context.conversationGoals,historyLength:this.context.conversationHistory.length,activeIntentStates:Object.fromEntries(this.activeIntents)}}constructor(){this.activeIntents=new Map,this.maxHistoryLength=20,this.context={currentTopic:null,activeIntents:[],entityMemory:new Map,conversationGoals:[],userPreferences:{},conversationHistory:[]}}}class d{analyzeDiscourseContext(e,t,n){console.log("\uD83D\uDCAC Analyzing discourse context..."),this.updateTopicState(e,t,n),this.updateConversationFlow(e,t,n),this.updateReferenceResolution(e,n);let i=this.calculateTopicContinuity(e,t),o=this.detectDiscourseMarkers(e),a=this.determineExpectedResponseType(t,this.conversationFlow.currentPhase);return console.log("\uD83D\uDCAC Discourse analysis:",{currentTopic:this.topicState.currentTopic,conversationPhase:this.conversationFlow.currentPhase,topicContinuity:i,expectedResponseType:a}),{topicContinuity:i,conversationPhase:this.conversationFlow.currentPhase,expectedResponseType:a,discourseMarkers:o,referenceResolutions:this.referenceResolution.entityReferences}}updateTopicState(e,t,n){let i=this.extractTopicsFromInput(e,t);if(i.length>0){let e=i[0];this.topicState.currentTopic&&this.topicState.currentTopic!==e?(this.topicState.topicTransitions.has(this.topicState.currentTopic)||this.topicState.topicTransitions.set(this.topicState.currentTopic,[]),this.topicState.topicTransitions.get(this.topicState.currentTopic).push(e),this.topicState.topicHistory.push(this.topicState.currentTopic),this.topicState.topicDepth=0):this.topicState.currentTopic===e&&this.topicState.topicDepth++,this.topicState.currentTopic=e}this.topicState.topicCoherence=this.calculateTopicCoherence(n)}extractTopicsFromInput(e,t){let n=[];if(t.entities&&t.entities.length>0&&t.entities.forEach(e=>{let t=this.schemaVocabulary.inferEntityType(e);t?n.push("".concat(t.toLowerCase(),"_discussion")):n.push("".concat(e,"_topic"))}),t.intent)switch(t.intent){case"IDENTITY_INTRODUCTION":case"IDENTITY_QUERY":n.push("identity_discussion");break;case"HELP_REQUEST":n.push("assistance_request");break;case"INFORMATION_REQUEST":n.push("information_seeking");break;case"GREETING":n.push("social_interaction")}return n}updateConversationFlow(e,t,n){this.conversationFlow.turnsSincePhaseChange++;let i=this.conversationFlow.currentPhase,o=i;switch(i){case"opening":"IDENTITY_INTRODUCTION"===t.intent||"ENTITY_INTRODUCTION"===t.intent?o="exploration":this.conversationFlow.turnsSincePhaseChange>3&&(o="exploration");break;case"exploration":this.topicState.topicDepth>2?o="deepening":this.hasTopicTransition()&&(o="transition");break;case"deepening":this.hasTopicTransition()?o="transition":this.conversationFlow.turnsSincePhaseChange>8&&(o="transition");break;case"transition":this.topicState.topicDepth>0?o="exploration":this.conversationFlow.turnsSincePhaseChange>2&&(o="exploration")}o!==i&&(this.conversationFlow.currentPhase=o,this.conversationFlow.turnsSincePhaseChange=0,this.updateExpectedNextMoves(o)),this.updateConversationMomentum(t,n)}hasTopicTransition(){return this.topicState.topicHistory.length>0&&0===this.topicState.topicDepth}updateExpectedNextMoves(e){switch(e){case"opening":this.conversationFlow.expectedNextMoves=["greeting","introduction","question"];break;case"exploration":this.conversationFlow.expectedNextMoves=["information_sharing","question","elaboration"];break;case"deepening":this.conversationFlow.expectedNextMoves=["detailed_explanation","follow_up","clarification"];break;case"transition":this.conversationFlow.expectedNextMoves=["topic_change","summary","new_question"];break;case"closing":this.conversationFlow.expectedNextMoves=["farewell","summary","future_reference"]}}updateConversationMomentum(e,t){let n=this.conversationFlow.conversationMomentum;("QUESTION"===e.intent||"INFORMATION_REQUEST"===e.intent)&&(n+=.2),("ENTITY_INTRODUCTION"===e.intent||"IDENTITY_INTRODUCTION"===e.intent)&&(n+=.3),"GENERAL_CONVERSATION"===e.intent&&0===e.entities.length&&(n-=.1),n*=.95,this.conversationFlow.conversationMomentum=Math.max(0,Math.min(1,n))}updateReferenceResolution(e,t){this.resolvePronounReferences(e,t),this.updateEntityReferences(e,t),this.updateContextualReferences(e,t)}resolvePronounReferences(e,t){["it","he","she","they","that","this"].forEach(n=>{if(e.toLowerCase().includes(n)){let e=this.findMostRecentEntity(t,n);e&&this.referenceResolution.pronouns.set(n,e)}})}findMostRecentEntity(e,t){let n=e.conversationHistory.slice(-5);for(let e=n.length-1;e>=0;e--){let t=n[e];if(Object.keys(t.entities).length>0)return Object.values(t.entities)[0]}return null}updateEntityReferences(e,t){for(let[n,i]of t.entityMemory)e.toLowerCase().includes(i.value.toLowerCase())&&this.referenceResolution.entityReferences.set(i.value,{type:i.entityType||"unknown",lastMentioned:Date.now(),context:e})}updateContextualReferences(e,t){this.topicState.topicHistory.forEach(t=>{e.toLowerCase().includes(t.toLowerCase())&&this.referenceResolution.contextualReferences.set(t,{referenceType:"topic_callback",originalContext:t,currentMention:e})})}calculateTopicContinuity(e,t){if(!this.topicState.currentTopic)return 0;let n=0,i=this.getTopicKeywords(this.topicState.currentTopic);return n=e.toLowerCase().split(/\W+/).filter(e=>i.includes(e)).length/Math.max(i.length,1),t.entities&&t.entities.length>0&&(n+=.3),Math.min(1,n)}getTopicKeywords(e){return({identity_discussion:["name","identity","who","person","individual"],animal_discussion:["dog","cat","pet","animal","breed","species"],vehicle_discussion:["car","truck","vehicle","drive","transportation"],assistance_request:["help","assist","support","aid","guidance"],information_seeking:["what","how","why","when","where","question"],social_interaction:["hello","hi","greeting","nice","meet"]})[e]||[]}calculateTopicCoherence(e){if(e.conversationHistory.length<2)return 1;let t=e.conversationHistory.slice(-5),n=0,i=new Map;return t.forEach(e=>{Object.values(e.entities).forEach(e=>{i.set(e,(i.get(e)||0)+1)})}),Math.min(1,Math.max(...Array.from(i.values()),0)/t.length)}detectDiscourseMarkers(e){let t=[],n=e.toLowerCase();return Object.entries({topic_shift:["anyway","by the way","speaking of","that reminds me"],elaboration:["also","furthermore","in addition","moreover"],contrast:["but","however","on the other hand","although"],conclusion:["so","therefore","in conclusion","to summarize"],clarification:["i mean","that is","in other words","specifically"],sequence:["first","then","next","finally","after that"]}).forEach(e=>{let[i,o]=e;o.forEach(e=>{n.includes(e)&&t.push(i)})}),[...new Set(t)]}determineExpectedResponseType(e,t){let n="acknowledgment";switch(e.intent){case"QUESTION":case"INFORMATION_REQUEST":case"IDENTITY_QUERY":case"ENTITY_QUERY":case"BOT_IDENTITY_QUERY":n="informative_answer";break;case"GREETING":n="social_response";break;case"IDENTITY_INTRODUCTION":case"ENTITY_INTRODUCTION":n="acknowledgment_with_followup";break;case"HELP_REQUEST":n="supportive_response";break;case"GRATITUDE":n="gracious_acknowledgment"}switch(t){case"opening":"acknowledgment"===n&&(n="welcoming_response");break;case"deepening":"informative_answer"===n&&(n="detailed_explanation");break;case"transition":"informative_answer"!==n&&(n="transitional_response")}return n}getDiscourseState(){return{topicState:{...this.topicState},conversationFlow:{...this.conversationFlow},referenceResolution:{pronouns:new Map(this.referenceResolution.pronouns),entityReferences:new Map(this.referenceResolution.entityReferences),contextualReferences:new Map(this.referenceResolution.contextualReferences)}}}resetDiscourseState(){this.topicState={currentTopic:"",topicHistory:[],topicTransitions:new Map,topicDepth:0,topicCoherence:0},this.conversationFlow={currentPhase:"opening",turnsSincePhaseChange:0,expectedNextMoves:["greeting","introduction","question"],conversationMomentum:0},this.referenceResolution={pronouns:new Map,entityReferences:new Map,contextualReferences:new Map}}constructor(e){this.schemaVocabulary=e,this.topicState={currentTopic:"",topicHistory:[],topicTransitions:new Map,topicDepth:0,topicCoherence:0},this.conversationFlow={currentPhase:"opening",turnsSincePhaseChange:0,expectedNextMoves:["greeting","introduction","question"],conversationMomentum:0},this.referenceResolution={pronouns:new Map,entityReferences:new Map,contextualReferences:new Map}}}class m{generateResponse(e){var t;console.log("\uD83C\uDFA8 Generating dynamic response..."),console.log("Response type:",e.responseType),console.log("Conversation phase:",null==(t=e.discourseContext)?void 0:t.conversationPhase);let n=this.determineGenerationStyle(e),i=this.generateResponseComponents(e,n),o=this.assembleResponse(i,n);return console.log("\uD83C\uDFA8 Generated response:",o),o}determineGenerationStyle(e){var t,n,i,o,a,s;let r={...this.defaultStyle};switch(null==(t=e.discourseContext)?void 0:t.conversationPhase){case"opening":r.formality="neutral",r.enthusiasm="medium";break;case"exploration":r.formality="casual",r.enthusiasm="medium";break;case"deepening":r.formality="neutral",r.verbosity="detailed";break;case"transition":r.enthusiasm="low",r.verbosity="concise"}switch(null==(n=e.semanticContext)?void 0:n.intent){case"GREETING":r.enthusiasm="high",r.personality="friendly";break;case"HELP_REQUEST":r.personality="helpful",r.enthusiasm="medium";break;case"INFORMATION_REQUEST":case"QUESTION":r.personality="analytical",r.verbosity="detailed";break;case"GRATITUDE":r.personality="friendly",r.enthusiasm="medium"}return(null==(o=e.discourseContext)||null==(i=o.conversationFlow)?void 0:i.conversationMomentum)>.7?(r.enthusiasm="high",r.verbosity="detailed"):(null==(s=e.discourseContext)||null==(a=s.conversationFlow)?void 0:a.conversationMomentum)<.3&&(r.enthusiasm="low",r.verbosity="concise"),r}generateResponseComponents(e,t){let n={opening:"",core:"",followup:"",closing:""};return n.opening=this.generateOpening(e,t),n.core=this.generateCore(e,t),n.followup=this.generateFollowup(e,t),n.closing=this.generateClosing(e,t),n}generateOpening(e,t){var n,i;let o=e.responseType;null==(n=e.discourseContext)||n.conversationPhase;let a=(null==(i=({social_response:{friendly:["Hello!","Hi there!","Hey!","Greetings!"],helpful:["Hello!","Hi!","Welcome!"],analytical:["Hello.","Greetings."],professional:["Good day.","Hello."]},acknowledgment_with_followup:{friendly:["That's wonderful!","How nice!","Great!"],helpful:["I understand.","I see.","Got it."],analytical:["Noted.","Understood.","I see."],professional:["Acknowledged.","Understood."]},informative_answer:{friendly:["Let me help with that!","I'd be happy to explain!"],helpful:["I can help with that.","Let me assist you."],analytical:["Based on my analysis,","From my understanding,"],professional:["I can provide that information."]},supportive_response:{friendly:["I'm here to help!","I'd love to assist!"],helpful:["I'm here to help.","I can assist you."],analytical:["I can provide assistance.","I'm available to help."],professional:["I'm available to assist."]},gracious_acknowledgment:{friendly:["You're so welcome!","My pleasure!"],helpful:["You're welcome!","Happy to help!"],analytical:["You're welcome.","Glad I could help."],professional:["You're welcome."]}})[o])?void 0:i[t.personality])||[""];if(0===a.length)return"";let s=a[0];return"high"===t.enthusiasm&&a.length>1?s=a[Math.min(1,a.length-1)]:"low"===t.enthusiasm&&(s=a[a.length-1]),s}generateCore(e,t){let n=e.responseType;switch(e.semanticContext,e.pragmaticContext,n){case"social_response":return this.generateSocialCore(e,t);case"acknowledgment_with_followup":return this.generateAcknowledgmentCore(e,t);case"informative_answer":return this.generateInformativeCore(e,t);case"supportive_response":return this.generateSupportiveCore(e,t);case"gracious_acknowledgment":return this.generateGraciousCore(e,t);case"welcoming_response":return this.generateWelcomingCore(e,t);case"detailed_explanation":return this.generateDetailedCore(e,t);case"transitional_response":return this.generateTransitionalCore(e,t);default:return this.generateDefaultCore(e,t)}}generateSocialCore(e,t){let n=this.getBotIdentityDescription(t),i=this.getCapabilityDescription(t);return"detailed"===t.verbosity?"".concat(n," ").concat(i):"moderate"===t.verbosity?n:"I'm PrimeBot."}generateAcknowledgmentCore(e,t){var n;let i=(null==(n=e.semanticContext)?void 0:n.entities)||[];if(i.length>=2){let e=i[0],n=i[1],o=this.schemaVocabulary.inferEntityType(e);return this.generateEntityAcknowledgment(e,n,o,t)}if(1===i.length){let e=i[0];return this.generateNameAcknowledgment(e,t)}return this.generateGenericAcknowledgment(t)}generateEntityAcknowledgment(e,t,n,i){let o=this.getEntityAcknowledgmentTemplates(i),a=o[Math.floor(Math.random()*o.length)].replace("{entityType}",e).replace("{entityName}",t);if(n&&"concise"!==i.verbosity){let o=this.generateSchemaContext(e,t,n,i);o&&(a+=" ".concat(o))}return a}getEntityAcknowledgmentTemplates(e){switch(e.personality){case"friendly":return["It's lovely to know that your {entityType} is named {entityName}!","What a wonderful name for your {entityType} - {entityName}!","I love that your {entityType} is called {entityName}!"];case"helpful":return["I understand that your {entityType} is named {entityName}.","Thank you for telling me about {entityName}, your {entityType}.","I've noted that your {entityType} is named {entityName}."];case"analytical":return["I've recorded that your {entityType} has the name {entityName}.","Entity relationship noted: {entityType} hasName {entityName}.","I understand the naming relationship for your {entityType}."];case"professional":return["I acknowledge that your {entityType} is named {entityName}.","Thank you for providing the name of your {entityType}.","I have recorded the information about {entityName}."];default:return["I understand that your {entityType} is named {entityName}."]}}generateSchemaContext(e,t,n,i){if(!this.schemaVocabulary.getEntityInfo(n))return"";switch(this.schemaVocabulary.getValidProperties(n),n){case"Animal":if("friendly"===i.personality)return"Tell me more about ".concat(t," - what kind of ").concat(e," is ").concat(t,"?");if("analytical"===i.personality)return"As an Animal entity, ".concat(t," has properties like species and breed.");return"What kind of ".concat(e," is ").concat(t,"?");case"Vehicle":if("friendly"===i.personality)return"I'd love to hear more about ".concat(t,"! What kind of ").concat(e," is it?");return"What type of ".concat(e," is ").concat(t,"?");case"Person":if("friendly"===i.personality)return"It's nice to meet ".concat(t,"! Tell me more about them.");return"Tell me more about ".concat(t,".");default:return"Tell me more about ".concat(t,".")}}generateNameAcknowledgment(e,t){let n=this.getNameAcknowledgmentTemplates(t);return n[Math.floor(Math.random()*n.length)].replace("{name}",e)}getNameAcknowledgmentTemplates(e){switch(e.personality){case"friendly":return["It's wonderful to meet you, {name}!","Nice to meet you, {name}!","Hello {name}! Great to meet you!"];case"helpful":return["Nice to meet you, {name}!","Hello {name}! I'm here to help.","Welcome, {name}!"];case"analytical":return["Acknowledged, {name}.","Hello {name}.","Identity recorded: {name}."];case"professional":return["Good to meet you, {name}.","Hello {name}.","Welcome, {name}."];default:return["Nice to meet you, {name}!"]}}generateInformativeCore(e,t){var n;let i=e.semanticContext,o=e.pragmaticContext,a=(null==(n=o.conversationHistory[o.conversationHistory.length-1])?void 0:n.text)||"",s=this.handleSemanticQuery(e,t);if(s)return s;if((null==i?void 0:i.entities)&&i.entities.length>0){let e=i.entities[0],n=this.schemaVocabulary.inferEntityType(e);if(n)return this.generateEntityInformation(e,n,t)}return this.handleUnknownQuery(a,o,t)}handleUnknownQuery(e,t,n){let i=e.toLowerCase();if(this.containsPronoun(i)){let n=this.resolvePronounQuery(e,t);if(n)return n}return i.includes("what")&&i.includes("car")?"I don't have information about your car. Could you tell me about your car?":i.includes("what")&&i.includes("do")?"I'd be happy to help! Could you tell me more about what you're looking for?":i.includes("how")&&i.includes("old")?"I don't have age information stored. Could you share that with me?":i.includes("where")&&i.includes("live")?"I don't have location information. Where do you live?":i.startsWith("what")||i.startsWith("how")||i.startsWith("where")||i.startsWith("when")||i.startsWith("why")?"That's a great question! I don't have that specific information yet. Could you tell me more about it?":i.includes("do i have")||i.includes("is my")?"I don't have that information stored. Could you tell me about it?":"I'd like to help with that! Could you provide more details or tell me what you'd like me to know?"}containsPronoun(e){return["her","his","their","its","she","he","they","it"].some(t=>e.includes(t))}resolvePronounQuery(e,t){let n=e.toLowerCase(),i=t.conversationHistory.slice(-5);for(let e=i.length-1;e>=0;e--){let t=i[e];if("ENTITY_INTRODUCTION"===t.intent){let e=Object.values(t.entities);if((n.includes("her")||n.includes("she"))&&e.length>=2){let t=e[0],i=e[1];if(this.isFemalePronounEntity(t)){if(n.includes("name"))return"Her name is ".concat(i,".");return"You're asking about ".concat(i,", your ").concat(t,".")}}if((n.includes("his")||n.includes("he"))&&e.length>=2){let t=e[0],i=e[1];if(this.isMalePronounEntity(t)){if(n.includes("name"))return"His name is ".concat(i,".");return"You're asking about ".concat(i,", your ").concat(t,".")}}if(e.length>=2){e[0];let t=e[1];if(n.includes("name"))return"The name is ".concat(t,".")}}}return null}isFemalePronounEntity(e){return["wife","mother","sister","daughter","girlfriend","aunt","grandmother","woman","girl"].includes(e.toLowerCase())}isMalePronounEntity(e){return["husband","father","brother","son","boyfriend","uncle","grandfather","man","boy"].includes(e.toLowerCase())}handleSemanticQuery(e,t){var n;let i=e.pragmaticContext,o=(null==(n=i.conversationHistory[i.conversationHistory.length-1])?void 0:n.text)||"";if(console.log("\uD83D\uDD0D Handling semantic query for:",o),console.log("\uD83D\uDD0D Available entity memory:",Object.fromEntries(i.entityMemory)),o.toLowerCase().includes("who are you")||o.toLowerCase().includes("what is your name"))return this.handleBotIdentityQuery(t);if(o.toLowerCase().includes("what is my name"))return this.handleNameQuery(i,t);let a=o.match(/what is my (\w+)'?s? name/i);if(a){let e=a[1];return this.handleEntityNameQuery(e,i,t)}let s=o.match(/what is my (\w+)'s name/i);if(s){let e=s[1];return this.handleEntityNameQuery(e,i,t)}let r=o.match(/who is (\w+)/i);if(r){let e=r[1];return this.handleWhoIsQuery(e,i,t)}let c=o.match(/what (\w+) is my (\w+)/i);if(c){let e=c[1],n=c[2];return this.handleAttributeQuery(e,n,i,t)}let l=o.match(/what is my (\w+) (\w+)/i);if(l){let e=l[1],n=l[2];return this.handleAttributeQuery(n,e,i,t)}return null}handleBotIdentityQuery(e){switch(e.personality){case"friendly":return"I'm PrimeBot, your friendly AI assistant! I use mathematical prime factorization and semantic understanding to have conversations.";case"analytical":return"I am PrimeBot, an AI system that processes information through mathematical prime factorization and semantic analysis using Schema.org vocabulary.";case"professional":return"I am PrimeBot, an AI assistant specializing in semantic understanding and mathematical analysis.";default:return"I'm PrimeBot, an AI assistant powered by mathematical prime factorization and semantic understanding."}}handleNameQuery(e,t){let n=e.conversationHistory.map(e=>e.text).join(" ").toLowerCase().match(/my name is (\w+)/i);if(n){let e=n[1];switch(t.personality){case"friendly":return"Your name is ".concat(e,"! I remember you telling me that.");case"analytical":return"Based on our conversation history, your name is ".concat(e,".");case"professional":return"According to our conversation, your name is ".concat(e,".");default:return"Your name is ".concat(e,".")}}switch(t.personality){case"friendly":return"I don't recall you mentioning your name yet. I'd love to know what to call you!";case"helpful":default:return"I don't recall you mentioning your name. What is your name?";case"analytical":return"No name information found in conversation history. Please provide your name."}}handleEntityNameQuery(e,t,n){for(let[i,o]of t.entityMemory)if(i==="".concat(e,"_name")||"hasName"===o.relationship&&o.entityType===e){let t=this.capitalizeFirstLetter(o.value),i="Your ".concat(e," is named ").concat(t,"."),a=this.schemaVocabulary.inferEntityType(e);if(a&&"concise"!==n.verbosity){let o=this.generateContextualNote(e,t,a,n);o&&(i+=" ".concat(o))}return i}let i=t.conversationHistory.map(e=>e.text).join(" "),o=RegExp("my ".concat(e,"'?s? name is (\\w+)"),"i"),a=i.match(o);if(a){let t=this.capitalizeFirstLetter(a[1]),i=this.schemaVocabulary.inferEntityType(e),o="Your ".concat(e," is named ").concat(t,".");if(i&&"concise"!==n.verbosity){let a=this.generateContextualNote(e,t,i,n);a&&(o+=" ".concat(a))}return o}switch(n.personality){case"friendly":return"I don't recall you mentioning your ".concat(e,"'s name. What is your ").concat(e," called?");case"helpful":default:return"I don't recall you mentioning your ".concat(e,"'s name. What is your ").concat(e,"'s name?");case"analytical":return"No naming information found for entity type: ".concat(e,". Please provide the name.")}}handleWhoIsQuery(e,t,n){for(let[i,o]of t.entityMemory)if(o.value.toLowerCase()===e.toLowerCase()){if(i.endsWith("_name")){let t=i.replace("_name","");switch(n.personality){case"friendly":return"".concat(e," is your ").concat(t,"! I remember you telling me about them.");case"analytical":return"Based on our conversation history, ".concat(e," is identified as your ").concat(t,".");case"professional":return"According to our conversation, ".concat(e," is your ").concat(t,".");default:return"".concat(e," is your ").concat(t,".")}}else if("user_name"===i)return"".concat(e," is you! That's your name.")}switch(n.personality){case"friendly":return"I don't recall you mentioning anyone named ".concat(e,". Could you tell me more about them?");case"helpful":return"I don't have information about ".concat(e,". Who is ").concat(e,"?");case"analytical":return'No entity information found for "'.concat(e,'" in conversation history.');default:return"I don't recall you mentioning ".concat(e,". Who is ").concat(e,"?")}}handleAttributeQuery(e,t,n,i){let o=n.conversationHistory.map(e=>e.text).join(" ").toLowerCase(),a=[RegExp("my ".concat(t," is ([\\w\\s]+?)(?:\\s|\\.|$)"),"i"),RegExp("i have a ([\\w\\s]+?) ".concat(t,"(?:\\s|\\.|$)"),"i"),RegExp("".concat(t," is ([\\w\\s]+?)(?:\\s|\\.|$)"),"i"),RegExp("([\\w\\s]+?) ".concat(t,"(?:\\s|\\.|$)"),"i")],s=null;for(let e of a){let t=o.match(e);if(t){s=t[1].trim();break}}if(s){let e=this.capitalizeFirstLetter(s);switch(i.personality){case"friendly":return"Your ".concat(t," is ").concat(e,"! I remember you telling me that.");case"analytical":return"Based on conversation history, your ".concat(t," is ").concat(e,".");case"professional":return"According to our conversation, your ".concat(t," is ").concat(e,".");default:return"Your ".concat(t," is ").concat(e,".")}}for(let[i,o]of n.entityMemory)if(i.includes(t)&&o.metadata&&o.metadata[e]){let n=o.metadata[e];return"Your ".concat(t," is ").concat(n,".")}switch(i.personality){case"friendly":return"I don't recall you mentioning the ".concat(e," of your ").concat(t,". What ").concat(e," is your ").concat(t,"?");case"helpful":return"I don't have information about your ".concat(t,"'s ").concat(e,". Could you tell me what ").concat(e," your ").concat(t," is?");case"analytical":return"No ".concat(e," attribute found for entity: ").concat(t,". Please provide this information.");default:return"I don't have information about your ".concat(t,"'s ").concat(e,". What ").concat(e," is it?")}}generateContextualNote(e,t,n,i){switch(n){case"Animal":if("friendly"===i.personality)return"That's a lovely name for ".concat("Animal"===e?"an animal":"a "+e,"!");return"".concat(t," is classified as an Animal entity.");case"Vehicle":return"friendly"===i.personality?"".concat(t," sounds like a great ").concat(e,"!"):"".concat(t," is classified as a Vehicle entity.");default:return""}}generateEntityInformation(e,t,n){let i=this.schemaVocabulary.getEntityInfo(t);return"analytical"===n.personality&&i?"I'm analyzing \"".concat(e,'" as ').concat("Animal"===t?"an":"a"," ").concat(t," entity. This type has properties like ").concat(i.properties.slice(0,3).join(", "),"."):"friendly"===n.personality?'I notice you mentioned "'.concat(e,'" - I understand that as ').concat("Animal"===t?"an":"a"," ").concat(t,". That's interesting!"):"I'm processing information about \"".concat(e,'" as ').concat("Animal"===t?"an":"a"," ").concat(t,".")}generateGenericInformativeResponse(e){switch(e.personality){case"friendly":return"That's a great question! I'm working through the information to give you a helpful answer.";case"analytical":return"I'm analyzing the semantic relationships and mathematical patterns to provide an accurate response.";case"professional":return"I'm processing your request to provide you with the appropriate information.";default:return"I'm analyzing the information to provide you with an answer."}}generateSupportiveCore(e,t){let n=this.getCapabilityDescription(t);switch(t.personality){case"friendly":return"I can understand relationships between people, animals, places, and things. ".concat(n);case"analytical":return"I process information through semantic analysis and mathematical prime factorization. ".concat(n);case"professional":return"I'm equipped to assist with information processing and semantic understanding. ".concat(n);default:return"I can help with understanding relationships and processing information. ".concat(n)}}generateGraciousCore(e,t){switch(t.personality){case"friendly":return"I'm so glad I could help with my semantic understanding!";case"analytical":return"I'm pleased that my mathematical analysis was useful.";case"professional":return"I'm glad I could provide the assistance you needed.";default:return"I'm glad I could help!"}}generateWelcomingCore(e,t){let n=this.getBotIdentityDescription(t),i=this.getCapabilityDescription(t);return"".concat(n," ").concat(i)}generateDetailedCore(e,t){let n=this.generateInformativeCore(e,t),i=this.getTechnicalDetails(e,t);return"".concat(n," ").concat(i)}generateTransitionalCore(e,t){var n,i;let o=e.discourseContext;if((null==o||null==(i=o.topicState)||null==(n=i.topicHistory)?void 0:n.length)>0){let e=o.topicState.topicHistory[o.topicState.topicHistory.length-1];return"I notice we've moved from discussing ".concat(e," to a new topic.")}return"I'm ready to explore whatever you'd like to discuss."}generateDefaultCore(e,t){switch(t.personality){case"friendly":return"I'm listening and ready to understand what you're telling me!";case"analytical":return"I'm processing the semantic relationships in your message.";case"professional":return"I'm ready to assist with your inquiry.";default:return"I'm listening and ready to help."}}generateFollowup(e,t){var n;let i=e.responseType,o=null==(n=e.discourseContext)?void 0:n.conversationPhase;return"acknowledgment_with_followup"===i||"welcoming_response"===i||"exploration"===o?this.generateContextualFollowup(e,t):""}generateContextualFollowup(e,t){var n;switch(null==(n=e.discourseContext)?void 0:n.conversationPhase){case"opening":return this.generateOpeningFollowup(t);case"exploration":return this.generateExplorationFollowup(e,t);case"deepening":return this.generateDeepeningFollowup(e,t);default:return this.generateGenericFollowup(t)}}generateOpeningFollowup(e){switch(e.personality){case"friendly":return"How can I help you today?";case"helpful":return"What can I assist you with?";case"analytical":return"What would you like to explore?";case"professional":return"How may I assist you?";default:return"How can I help?"}}generateExplorationFollowup(e,t){var n;let i=(null==(n=e.semanticContext)?void 0:n.entities)||[];if(i.length>0){let e=i[i.length-1];switch(t.personality){case"friendly":return"Tell me more about ".concat(e,"!");case"analytical":return"What additional information can you provide about ".concat(e,"?");case"professional":return"Please share more details about ".concat(e,".");default:return"Tell me more about ".concat(e,".")}}return this.generateGenericFollowup(t)}generateDeepeningFollowup(e,t){switch(t.personality){case"friendly":return"What else would you like to explore about this?";case"analytical":return"Are there specific aspects you'd like me to analyze further?";case"professional":return"What additional details would be helpful?";default:return"What else would you like to know?"}}generateGenericFollowup(e){switch(e.personality){case"friendly":default:return"What would you like to discuss?";case"analytical":return"What would you like to analyze?";case"professional":return"What would you like to explore?"}}generateClosing(e,t){if("detailed"===t.verbosity&&("welcoming_response"===e.responseType||"detailed_explanation"===e.responseType))switch(t.personality){case"friendly":return"I'm excited to learn more!";case"analytical":return"I'm ready to process more information.";case"professional":return"I look forward to assisting you further."}return""}assembleResponse(e,t){let n=[];return e.opening&&n.push(e.opening),e.core&&n.push(e.core),e.followup&&n.push(e.followup),e.closing&&n.push(e.closing),n.join(" ")}getBotIdentityDescription(e){switch(e.personality){case"friendly":return"I'm PrimeBot, your friendly AI assistant powered by mathematical prime factorization and semantic understanding.";case"analytical":return"I'm PrimeBot, an AI system that processes information through mathematical prime factorization and semantic analysis.";case"professional":return"I'm PrimeBot, an AI assistant specializing in semantic understanding and mathematical analysis.";default:return"I'm PrimeBot, powered by mathematical prime factorization and semantic understanding."}}getCapabilityDescription(e){switch(e.verbosity){case"detailed":return"I can understand relationships between people, animals, places, and things using Schema.org vocabulary, maintain conversation memory, and provide contextual responses based on mathematical prime resonance.";case"moderate":return"I can understand relationships between entities and maintain conversation context.";case"concise":return"I understand entity relationships and context.";default:return"I can help with understanding relationships and processing information."}}getTechnicalDetails(e,t){return"analytical"!==t.personality?"":"Using mathematical prime factorization and Schema.org semantic relationships for analysis."}generateGenericAcknowledgment(e){switch(e.personality){case"friendly":return"That's interesting! I'm learning about what you're telling me.";case"analytical":return"Information processed and stored in semantic memory.";case"professional":return"I acknowledge the information you've provided.";default:return"I understand. Thank you for sharing that with me."}}capitalizeFirstLetter(e){return e?e.charAt(0).toUpperCase()+e.slice(1).toLowerCase():e}constructor(e){this.schemaVocabulary=e,this.defaultStyle={formality:"neutral",enthusiasm:"medium",verbosity:"moderate",personality:"helpful"}}}var p=n(9509);class y{createDefaultConfig(){return{core:{embeddingModel:"Xenova/all-MiniLM-L6-v2",embeddingDimension:384,maxPrimes:1e3,primeThreshold:.02},conversation:{maxHistoryLength:50,maxContextWindow:10,coherenceThreshold:.1,similarityThreshold:.3,cleanupInterval:18e5,memoryRetentionHours:24},entityMemory:{maxEntities:1e3,cleanupThreshold:.1,confidenceDecay:.05,mentionBoost:.1},episodicMemory:{maxEpisodes:1e3,consolidationThreshold:.8,connectionThreshold:.3,importanceDecay:.01,clusterThreshold:.4},generation:{resonanceThreshold:100,harmonicWeight:.7,personalityWeight:.3,semanticBoostMultiplier:2,maxResonantWords:5},errorHandling:{maxErrorHistory:100,criticalErrorThreshold:5,recoveryTimeoutMs:5e3,fallbackEnabled:!0},performance:{batchSize:10,processingTimeout:3e4,cacheSize:500,indexingEnabled:!0},debug:{enabled:!0,logLevel:"info",showPrimeFactors:!0,showResonance:!0,showTiming:!0}}}getConfig(){return JSON.parse(JSON.stringify(this.config))}getSection(e){return JSON.parse(JSON.stringify(this.config[e]))}updateConfig(e){this.config=this.deepMerge(this.config,e),this.notifyListeners("config-updated"),console.log("⚙️ Configuration updated")}updateSection(e,t){this.config[e]=this.deepMerge(this.config[e],t),this.notifyListeners("".concat(e,"-updated")),console.log("⚙️ Configuration section '".concat(e,"' updated"))}resetToDefaults(){this.config=this.createDefaultConfig(),this.notifyListeners("config-reset"),console.log("\uD83D\uDD04 Configuration reset to defaults")}loadFromEnvironment(){let e={};p.env.PRIMELM_EMBEDDING_MODEL&&(e.core={...this.config.core,embeddingModel:p.env.PRIMELM_EMBEDDING_MODEL}),p.env.PRIMELM_COHERENCE_THRESHOLD&&(e.conversation={...this.config.conversation,coherenceThreshold:parseFloat(p.env.PRIMELM_COHERENCE_THRESHOLD)}),p.env.PRIMELM_MAX_ENTITIES&&(e.entityMemory={...this.config.entityMemory,maxEntities:parseInt(p.env.PRIMELM_MAX_ENTITIES)}),p.env.PRIMELM_DEBUG_ENABLED&&(e.debug={...this.config.debug,enabled:"true"===p.env.PRIMELM_DEBUG_ENABLED}),p.env.PRIMELM_LOG_LEVEL&&(e.debug={...this.config.debug,logLevel:p.env.PRIMELM_LOG_LEVEL}),Object.keys(e).length>0&&(this.updateConfig(e),console.log("\uD83C\uDF0D Configuration loaded from environment variables"))}validateConfig(){let e=[];return this.config.core.embeddingDimension<=0&&e.push("Core embedding dimension must be positive"),(this.config.core.primeThreshold<0||this.config.core.primeThreshold>1)&&e.push("Core prime threshold must be between 0 and 1"),this.config.conversation.maxHistoryLength<=0&&e.push("Conversation max history length must be positive"),(this.config.conversation.coherenceThreshold<0||this.config.conversation.coherenceThreshold>1)&&e.push("Conversation coherence threshold must be between 0 and 1"),this.config.entityMemory.maxEntities<=0&&e.push("Entity memory max entities must be positive"),(this.config.entityMemory.cleanupThreshold<0||this.config.entityMemory.cleanupThreshold>1)&&e.push("Entity memory cleanup threshold must be between 0 and 1"),this.config.generation.resonanceThreshold<0&&e.push("Generation resonance threshold must be non-negative"),this.config.generation.semanticBoostMultiplier<=0&&e.push("Generation semantic boost multiplier must be positive"),this.config.performance.batchSize<=0&&e.push("Performance batch size must be positive"),this.config.performance.processingTimeout<=0&&e.push("Performance processing timeout must be positive"),{valid:0===e.length,errors:e}}getAdaptiveThresholds(e){let t={};return e.errorRate>.1?t.conversation={...this.config.conversation,coherenceThreshold:Math.max(.8*this.config.conversation.coherenceThreshold,.05),similarityThreshold:Math.max(.8*this.config.conversation.similarityThreshold,.1)}:e.errorRate<.01&&(t.conversation={...this.config.conversation,coherenceThreshold:Math.min(1.1*this.config.conversation.coherenceThreshold,.5),similarityThreshold:Math.min(1.1*this.config.conversation.similarityThreshold,.8)}),e.memoryUsage>.8&&(t.entityMemory={...this.config.entityMemory,cleanupThreshold:Math.min(1.5*this.config.entityMemory.cleanupThreshold,.5),maxEntities:Math.max(Math.floor(.8*this.config.entityMemory.maxEntities),100)}),e.responseTime>2e3&&(t.generation={...this.config.generation,maxResonantWords:Math.max(this.config.generation.maxResonantWords-1,2)},t.performance={...this.config.performance,batchSize:Math.max(Math.floor(.8*this.config.performance.batchSize),1),cacheSize:Math.min(2*this.config.performance.cacheSize,2e3)}),t}subscribe(e,t){this.listeners.has(e)||this.listeners.set(e,[]),this.listeners.get(e).push(t)}unsubscribe(e,t){let n=this.listeners.get(e);if(n){let e=n.indexOf(t);e>-1&&n.splice(e,1)}}notifyListeners(e){let t=this.listeners.get(e);t&&t.forEach(t=>{try{t(this.config)}catch(t){console.error("Error in config listener for event '".concat(e,"':"),t)}})}deepMerge(e,t){let n={...e};for(let e in t)void 0!==t[e]&&("object"!=typeof t[e]||null===t[e]||Array.isArray(t[e])?n[e]=t[e]:n[e]=this.deepMerge(n[e],t[e]));return n}exportConfig(){return JSON.stringify(this.config,null,2)}importConfig(e){try{let t=JSON.parse(e),n=this.validateImportedConfig(t);if(n.valid)this.updateConfig(t),console.log("\uD83D\uDCE5 Configuration imported successfully");else throw console.error("❌ Invalid configuration:",n.errors),Error("Invalid configuration: ".concat(n.errors.join(", ")))}catch(e){throw console.error("❌ Failed to import configuration:",e),e}}validateImportedConfig(e){let t=[];if("object"!=typeof e||null===e)return t.push("Configuration must be an object"),{valid:!1,errors:t};for(let n of["core","conversation","entityMemory","generation","errorHandling","performance","debug"])e[n]&&"object"!=typeof e[n]&&t.push("Section '".concat(n,"' must be an object"));return{valid:0===t.length,errors:t}}getSummary(){let e=Object.keys(this.config),t=0;for(let n of e)t+=Object.keys(this.config[n]).length;return{sections:e,totalSettings:t,lastUpdated:new Date().toISOString(),validation:this.validateConfig()}}constructor(e){this.listeners=new Map,this.config=this.createDefaultConfig(),e&&this.updateConfig(e)}}let g=new y;void 0!==p&&p.env&&g.loadFromEnvironment();class f{initializePersonalityProfile(){return{traits:{openness:.7,conscientiousness:.8,extraversion:.6,agreeableness:.8,neuroticism:.3},preferences:{communicationStyle:"friendly",topicInterests:[],responseLength:"moderate",emotionalSupport:"medium"},learningPatterns:{preferredExamples:[],commonMistakes:[],successfulInteractions:[]}}}storeEpisode(e,t,n){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:.5,o=this.generateEpisodeId(),a=Date.now(),s={id:o,timestamp:a,type:e,content:t,emotional:n,importance:i,connections:[],tags:this.generateTags(t,n),lastAccessed:a,accessCount:1};return this.episodes.set(o,s),this.updateIndices(s),this.createConnections(s),this.updatePersonalityProfile(s),this.considerConsolidation(),console.log("\uD83E\uDDE0 Stored episodic memory: ".concat(e," - ").concat(t.summary)),o}retrieveEpisodes(e){let t=new Set;if(e.keywords)for(let n of e.keywords){let e=this.memoryIndex.get(n.toLowerCase())||new Set;t=new Set(0===t.size?e:[...t].filter(t=>e.has(t)))}else t=new Set(this.episodes.keys());let n=Array.from(t).map(e=>this.episodes.get(e)).filter(t=>(!e.type||t.type===e.type)&&(!e.timeRange||!(t.timestamp<e.timeRange.start)&&!(t.timestamp>e.timeRange.end))&&(!e.emotions||!!e.emotions.some(e=>t.emotional.emotions.includes(e)))&&(!e.participants||!!e.participants.some(e=>t.content.participants.includes(e)))&&(!e.minImportance||!(t.importance<e.minImportance))&&!0);return n.sort((t,n)=>{let i=this.calculateRelevanceScore(t,e);return this.calculateRelevanceScore(n,e)-i}),n.forEach(e=>{e.lastAccessed=Date.now(),e.accessCount++}),e.limit&&(n=n.slice(0,e.limit)),console.log("\uD83D\uDD0D Retrieved ".concat(n.length," episodic memories")),n}getPersonalityInsights(){return JSON.parse(JSON.stringify(this.personalityProfile))}updatePersonalityFromInteraction(e,t,n,i){t?(this.personalityProfile.learningPatterns.successfulInteractions.push(e),this.personalityProfile.learningPatterns.successfulInteractions.length>50&&this.personalityProfile.learningPatterns.successfulInteractions.shift()):(this.personalityProfile.learningPatterns.commonMistakes.push(e),this.personalityProfile.learningPatterns.commonMistakes.length>30&&this.personalityProfile.learningPatterns.commonMistakes.shift()),n.includes("happy")||n.includes("satisfied")||(n.includes("confused")||n.includes("frustrated"))&&("brief"===this.personalityProfile.preferences.responseLength?this.personalityProfile.preferences.responseLength="moderate":"detailed"===this.personalityProfile.preferences.responseLength&&(this.personalityProfile.preferences.responseLength="moderate")),i.topic&&t&&!this.personalityProfile.preferences.topicInterests.includes(i.topic)&&(this.personalityProfile.preferences.topicInterests.push(i.topic),this.personalityProfile.preferences.topicInterests.length>20&&this.personalityProfile.preferences.topicInterests.shift()),console.log("\uD83E\uDDE0 Updated personality profile from interaction")}getMemoryClusters(){return Array.from(this.clusters.values()).sort((e,t)=>t.strength-e.strength)}getMemoryStats(){let e=Array.from(this.episodes.values()),t={},n={},i=0,o=Date.now(),a=0;return e.forEach(e=>{t[e.type]=(t[e.type]||0)+1,i+=e.importance,o=Math.min(o,e.timestamp),a=Math.max(a,e.timestamp),e.emotional.emotions&&Array.isArray(e.emotional.emotions)&&e.emotional.emotions.forEach(e=>{n[e]=(n[e]||0)+1})}),{totalEpisodes:e.length,episodesByType:t,averageImportance:e.length>0?i/e.length:0,memorySpan:{oldest:o,newest:a},emotionalDistribution:n,personalityTraits:this.personalityProfile.traits}}generateEpisodeId(){return"episode_".concat(Date.now(),"_").concat(Math.random().toString(36).substr(2,9))}generateTags(e,t){let n=[];if(e.summary){let t=e.summary.toLowerCase().split(/\W+/).filter(e=>e.length>2);n.push(...t.slice(0,5))}return e.participants&&Array.isArray(e.participants)&&n.push(...e.participants.map(e=>"participant:".concat(e))),t.emotions&&Array.isArray(t.emotions)&&n.push(...t.emotions.map(e=>"emotion:".concat(e))),e.context&&n.push("context:".concat(e.context)),[...new Set(n)]}updateIndices(e){e.tags&&Array.isArray(e.tags)&&e.tags.forEach(t=>{this.memoryIndex.has(t)||this.memoryIndex.set(t,new Set),this.memoryIndex.get(t).add(e.id)});let t=new Date(e.timestamp).toISOString().split("T")[0];this.temporalIndex.has(t)||this.temporalIndex.set(t,[]),this.temporalIndex.get(t).push(e.id),e.emotional.emotions&&Array.isArray(e.emotional.emotions)&&e.emotional.emotions.forEach(t=>{this.emotionalIndex.has(t)||this.emotionalIndex.set(t,[]),this.emotionalIndex.get(t).push(e.id)})}createConnections(e){g.getSection("episodicMemory");let t=this.retrieveEpisodes({keywords:e.tags.slice(0,3),limit:20}),n=[];t.forEach(t=>{if(t.id===e.id)return;let i=this.calculateEpisodeSimilarity(e,t);i>.3&&n.push({id:t.id,similarity:i})}),n.sort((e,t)=>t.similarity-e.similarity);let i=n.slice(0,5);i.forEach(t=>{let{id:n}=t;e.connections.push(n);let i=this.episodes.get(n);i&&!i.connections.includes(e.id)&&i.connections.push(e.id)}),console.log("\uD83D\uDD17 Created ".concat(i.length," connections for episode ").concat(e.id))}calculateEpisodeSimilarity(e,t){let n=0,i=0;return e.tags&&t.tags&&Array.isArray(e.tags)&&Array.isArray(t.tags)&&(n+=.4*(e.tags.filter(e=>t.tags.includes(e)).length/Math.max(e.tags.length,t.tags.length)),i+=.4),e.content.participants&&t.content.participants&&Array.isArray(e.content.participants)&&Array.isArray(t.content.participants)&&(n+=.3*(e.content.participants.filter(e=>t.content.participants.includes(e)).length/Math.max(e.content.participants.length,t.content.participants.length)),i+=.3),e.emotional.emotions&&t.emotional.emotions&&Array.isArray(e.emotional.emotions)&&Array.isArray(t.emotional.emotions)&&(n+=.2*(e.emotional.emotions.filter(e=>t.emotional.emotions.includes(e)).length/Math.max(e.emotional.emotions.length,t.emotional.emotions.length)),i+=.2),n+=.1*Math.max(0,1-Math.abs(e.timestamp-t.timestamp)/6048e5),(i+=.1)>0?n/i:0}calculateRelevanceScore(e,t){let n;return n=0+.4*e.importance+.3*Math.max(0,1-(Date.now()-e.timestamp)/864e5/30)+.2*Math.min(1,e.accessCount/10),t.keywords&&(n+=.1*(e.tags.filter(e=>t.keywords.some(t=>e.includes(t.toLowerCase()))).length/Math.max(t.keywords.length,e.tags.length))),n}updatePersonalityProfile(e){let t=e.emotional.emotions;t&&Array.isArray(t)&&((t.includes("curious")||t.includes("interested"))&&(this.personalityProfile.traits.openness=Math.min(1,this.personalityProfile.traits.openness+.01)),(t.includes("organized")||t.includes("systematic"))&&(this.personalityProfile.traits.conscientiousness=Math.min(1,this.personalityProfile.traits.conscientiousness+.01)),(t.includes("social")||t.includes("outgoing"))&&(this.personalityProfile.traits.extraversion=Math.min(1,this.personalityProfile.traits.extraversion+.01)),(t.includes("helpful")||t.includes("cooperative"))&&(this.personalityProfile.traits.agreeableness=Math.min(1,this.personalityProfile.traits.agreeableness+.01)),t.includes("anxious")||t.includes("stressed")?this.personalityProfile.traits.neuroticism=Math.min(1,this.personalityProfile.traits.neuroticism+.01):(t.includes("calm")||t.includes("relaxed"))&&(this.personalityProfile.traits.neuroticism=Math.max(0,this.personalityProfile.traits.neuroticism-.01)))}considerConsolidation(){let e=g.getSection("episodicMemory"),t=(null==e?void 0:e.maxEpisodes)||1e3;this.episodes.size>t&&this.consolidateMemories()}consolidateMemories(){console.log("\uD83E\uDDE0 Starting memory consolidation...");let e=Array.from(this.episodes.values()),t=g.getSection("episodicMemory"),n=Math.floor(.8*((null==t?void 0:t.maxEpisodes)||1e3));e.sort((e,t)=>{let n=.7*e.importance+e.accessCount/10*.3;return .7*t.importance+t.accessCount/10*.3-n}),e.slice(0,n);let i=e.slice(n);i.forEach(e=>{this.removeEpisode(e.id)}),this.updateClusters(),console.log("\uD83E\uDDE0 Memory consolidation complete: ".concat(i.length," episodes removed"))}removeEpisode(e){let t=this.episodes.get(e);t&&(this.episodes.delete(e),t.tags.forEach(t=>{let n=this.memoryIndex.get(t);n&&(n.delete(e),0===n.size&&this.memoryIndex.delete(t))}),t.connections.forEach(t=>{let n=this.episodes.get(t);n&&(n.connections=n.connections.filter(t=>t!==e))}))}updateClusters(){this.clusters.clear();let e=Array.from(this.episodes.values()),t=new Set;e.forEach(n=>{if(t.has(n.id))return;let i={id:"cluster_".concat(Date.now(),"_").concat(Math.random().toString(36).substr(2,6)),theme:this.generateClusterTheme(n),episodes:[n.id],strength:n.importance,lastReinforced:n.timestamp,associatedEmotions:[...n.emotional.emotions]};e.forEach(e=>{!t.has(e.id)&&e.id!==n.id&&this.calculateEpisodeSimilarity(n,e)>.4&&(i.episodes.push(e.id),i.strength+=e.importance,i.lastReinforced=Math.max(i.lastReinforced,e.timestamp),e.emotional.emotions.forEach(e=>{i.associatedEmotions.includes(e)||i.associatedEmotions.push(e)}),t.add(e.id))}),t.add(n.id),this.clusters.set(i.id,i)}),console.log("\uD83E\uDDE0 Updated memory clusters: ".concat(this.clusters.size," clusters created"))}generateClusterTheme(e){return e.tags.filter(e=>!e.includes(":")).slice(0,3).join(" ")||e.content.summary.split(" ").slice(0,3).join(" ")}startMemoryConsolidation(){let e=g.getSection("conversation");setInterval(()=>{this.considerConsolidation()},(null==e?void 0:e.cleanupInterval)||18e5)}constructor(){this.episodes=new Map,this.clusters=new Map,this.memoryIndex=new Map,this.temporalIndex=new Map,this.emotionalIndex=new Map,this.personalityProfile=this.initializePersonalityProfile(),this.startMemoryConsolidation()}}class w{analyzeEmotionalContent(e,t){console.log("❤️ Analyzing emotional content:",e);let n=this.detectEmotion(e),i=this.detectSocialCues(e),o=this.assessConversationMood(e,t),a=this.calculateEmpathyLevel(n,t),s=this.assessSupportNeeded(n,i);this.updateEmotionalHistory(n),this.updateConversationMood(o);let r={userEmotion:n,conversationMood:o,emotionalHistory:this.getRecentEmotionalHistory(),socialCues:i,empathyLevel:a,supportNeeded:s};return console.log("❤️ Emotional analysis complete:",{emotion:n.primary,mood:o,empathy:a,support:s}),r}generateEmotionalResponse(e,t){console.log("\uD83D\uDC9D Generating emotional response...");let n=this.determineResponseEmotion(e),i=this.selectEmpathyStrategy(e),o=this.determineSupportLevel(e),a=this.calculateTonalAdjustments(e),s=this.generateSuggestedPhrases(e,i);return console.log("\uD83D\uDC9D Emotional response generated:",{strategy:i,support:o,warmth:a.warmth}),{responseEmotion:n,empathyStrategy:i,supportLevel:o,tonalAdjustments:a,suggestedPhrases:s}}provideSocialAwarenessInsights(e,t){let n=this.analyzeRelationshipDynamics(t),i=this.identifyCommunicationStyle(e,t),o=this.assessCulturalConsiderations(e);return{relationshipDynamics:n,communicationStyle:i,culturalConsiderations:o,appropriateResponses:this.suggestAppropriateResponses(e),boundaryRespect:this.assessBoundaryRespect(e,t)}}detectEmotion(e){let t=e.toLowerCase(),n=[];for(let[e,i]of this.emotionLexicon)t.includes(e)&&n.push({emotion:i.primary,confidence:.8});[{pattern:/(!+|excited|amazing|wonderful|fantastic)/i,emotion:"joy",confidence:.7},{pattern:/(sad|depressed|down|upset|disappointed)/i,emotion:"sadness",confidence:.8},{pattern:/(angry|mad|furious|annoyed|frustrated)/i,emotion:"anger",confidence:.8},{pattern:/(scared|afraid|worried|anxious|nervous)/i,emotion:"fear",confidence:.7},{pattern:/(surprised|shocked|amazed|wow)/i,emotion:"surprise",confidence:.6},{pattern:/(disgusted|gross|yuck|eww)/i,emotion:"disgust",confidence:.7},{pattern:/(love|adore|cherish|treasure)/i,emotion:"love",confidence:.8},{pattern:/(hate|despise|loathe|detest)/i,emotion:"hate",confidence:.8},{pattern:/(curious|interested|intrigued|wondering)/i,emotion:"curiosity",confidence:.6},{pattern:/(confused|puzzled|bewildered|lost)/i,emotion:"confusion",confidence:.7},{pattern:/(grateful|thankful|appreciative)/i,emotion:"gratitude",confidence:.8},{pattern:/(proud|accomplished|achieved)/i,emotion:"pride",confidence:.7},{pattern:/(embarrassed|ashamed|humiliated)/i,emotion:"shame",confidence:.7},{pattern:/(lonely|isolated|alone)/i,emotion:"loneliness",confidence:.8},{pattern:/(hopeful|optimistic|positive)/i,emotion:"hope",confidence:.7},{pattern:/(hopeless|pessimistic|despair)/i,emotion:"despair",confidence:.8}].forEach(t=>{let{pattern:i,emotion:o,confidence:a}=t;i.test(e)&&n.push({emotion:o,confidence:a})});let i=this.detectContextualEmotions(e);if(n.push(...i),0===n.length)return this.createEmotionalState("neutral",0,.3,.5,.3,.5);let o=n.reduce((e,t)=>t.confidence>e.confidence?t:e),a=this.emotionLexicon.get(o.emotion)||this.createEmotionalState(o.emotion,0,.5,.5,.5,o.confidence),s=this.calculateEmotionalIntensity(e,a);return{...a,intensity:s,confidence:o.confidence}}detectContextualEmotions(e){let t=[];e.includes("?")&&(e.toLowerCase().includes("how")||e.toLowerCase().includes("why")?t.push({emotion:"curiosity",confidence:.6}):e.toLowerCase().includes("what")&&e.toLowerCase().includes("wrong")&&t.push({emotion:"concern",confidence:.7}));let n=(e.match(/!/g)||[]).length;n>0&&t.push({emotion:"excitement",confidence:Math.min(.8,.3+.2*n)});let i=e.match(/[A-Z]{2,}/g);return i&&i.length>0&&t.push({emotion:"emphasis",confidence:.6}),/\b(\w+)\s+\1\b/gi.test(e)&&t.push({emotion:"emphasis",confidence:.5}),t}calculateEmotionalIntensity(e,t){let n=t.intensity;return n+=.2*["very","extremely","incredibly","absolutely","totally","completely","utterly"].filter(t=>e.toLowerCase().includes(t)).length,n-=.15*["slightly","somewhat","a bit","kind of","sort of","maybe","perhaps"].filter(t=>e.toLowerCase().includes(t)).length,n+=.1*(e.match(/!/g)||[]).length,(e.match(/[A-Z]/g)||[]).length/e.length>.3&&(n+=.2),Math.max(0,Math.min(1,n))}detectSocialCues(e){let t=[],n=e.toLowerCase();return(n.includes("please")||n.includes("thank you")||n.includes("thanks"))&&t.push("polite"),(n.includes("urgent")||n.includes("asap")||n.includes("quickly"))&&t.push("urgent"),(n.includes("maybe")||n.includes("perhaps")||n.includes("not sure"))&&t.push("uncertain"),(n.includes("definitely")||n.includes("absolutely")||n.includes("certain"))&&t.push("confident"),(n.includes("help")||n.includes("advice")||n.includes("support"))&&t.push("support_seeking"),(n.includes("tell you")||n.includes("share")||n.includes("story"))&&t.push("sharing"),(n.includes("private")||n.includes("personal")||n.includes("don't want to"))&&t.push("boundary_setting"),t}assessConversationMood(e,t){let n=this.detectEmotion(e),i=this.detectSocialCues(e);return n.valence>.5?i.includes("sharing")?"open_sharing":i.includes("confident")?"positive_confident":"positive":n.valence<-.3?i.includes("support_seeking")?"seeking_support":i.includes("urgent")?"distressed":"negative":i.includes("uncertain")?"exploratory":i.includes("polite")?"formal":"neutral"}calculateEmpathyLevel(e,t){let n=.5;return e.valence<0&&(n+=.4*Math.abs(e.valence)),e.arousal>.7&&(n+=.2),["sadness","fear","shame","loneliness","despair"].includes(e.primary)&&(n+=.3),(null==t?void 0:t.emotionalHistory)&&t.emotionalHistory.slice(-3).filter(e=>e.valence<0).length>=2&&(n+=.2),Math.max(0,Math.min(1,n))}assessSupportNeeded(e,t){let n=0;return(e.valence<-.5?n+=2:e.valence<0&&(n+=1),e.intensity>.7&&(n+=1),t.includes("support_seeking")&&(n+=2),t.includes("urgent")&&(n+=1),t.includes("uncertain")&&(n+=1),["sadness","fear","shame","loneliness","despair"].includes(e.primary)&&(n+=2),n>=4)?"high":n>=2?"medium":"low"}determineResponseEmotion(e){let t=e.userEmotion;if(t.valence>.3)return this.createEmotionalState("warmth",.8*t.valence,.7*t.arousal,.6,.8*t.intensity,.8);if(t.valence<-.3){let e={sadness:"compassion",fear:"reassurance",anger:"understanding",shame:"acceptance",loneliness:"connection",despair:"hope"}[t.primary]||"empathy";return this.createEmotionalState(e,.3,.4,.5,.6,.8)}return this.createEmotionalState("calm",.1,.3,.5,.4,.7)}selectEmpathyStrategy(e){let t=e.userEmotion,n=e.supportNeeded;return"high"===n?"sadness"===t.primary?"emotional_validation":"fear"===t.primary?"reassurance_and_safety":"anger"===t.primary?"acknowledgment_and_understanding":"active_listening":"medium"===n?t.valence<0?"gentle_encouragement":e.socialCues.includes("uncertain")?"clarification_and_guidance":"supportive_engagement":t.valence>.5?"positive_reinforcement":e.socialCues.includes("sharing")?"interested_listening":"neutral_engagement"}determineSupportLevel(e){let t=e.userEmotion,n=e.socialCues;return["sadness","fear","shame","loneliness"].includes(t.primary)?"validation":["anger","frustration","confusion"].includes(t.primary)&&n.includes("support_seeking")?"problem_solving":n.includes("uncertain")||t.dominance<.3?"encouragement":t.intensity>.8&&t.arousal>.8?"distraction":"validation"}calculateTonalAdjustments(e){let t=e.userEmotion;return{warmth:Math.max(.3,e.empathyLevel),formality:t.valence<-.5?.3:.5,enthusiasm:Math.max(.2,.8*t.valence),patience:t.arousal>.7?.9:.6}}generateSuggestedPhrases(e,t){let n=[],i=e.userEmotion;return n.push(...this.empathyStrategies.get(t)||[]),n.push(...this.getEmotionSpecificPhrases(i.primary)),n.length<3&&n.push("I understand how you're feeling.","Thank you for sharing that with me.","I'm here to help."),n.slice(0,5)}getEmotionSpecificPhrases(e){return({sadness:["I can hear that you're going through a difficult time.","It's completely understandable to feel this way.","Your feelings are valid."],fear:["It's natural to feel worried about this.","You're not alone in feeling this way.","Let's work through this together."],anger:["I can understand why that would be frustrating.","Your feelings about this are completely valid.","It sounds like this situation is really challenging."],joy:["That's wonderful to hear!","I'm so happy for you!","What an exciting development!"],confusion:["That does sound confusing.","Let me help clarify that for you.","It's okay to feel uncertain about this."]})[e]||[]}analyzeRelationshipDynamics(e){if(e.length<3)return"early_interaction";let t=e.filter(e=>"human"===e.speaker).length/e.length;return t>.7?"user_driven":t<.3?"assistant_guided":"collaborative"}identifyCommunicationStyle(e,t){let n=e.socialCues;return n.includes("polite")&&n.includes("formal")?"formal_polite":n.includes("sharing")&&n.includes("open")?"open_expressive":n.includes("uncertain")&&n.includes("support_seeking")?"hesitant_seeking":n.includes("confident")&&n.includes("direct")?"direct_confident":"casual_friendly"}assessCulturalConsiderations(e){let t=[];return e.userEmotion.dominance<.3&&t.push("respect_for_hierarchy"),e.socialCues.includes("polite")&&t.push("formal_courtesy"),e.socialCues.includes("boundary_setting")&&t.push("privacy_respect"),t.push("inclusive_language","respectful_tone"),t}suggestAppropriateResponses(e){let t=[],n=e.userEmotion;return n.valence<-.5?t.push("offer_emotional_support","validate_feelings","provide_resources"):n.valence>.5?t.push("share_enthusiasm","encourage_continuation","ask_follow_up"):t.push("maintain_engagement","provide_information","ask_clarifying_questions"),t}assessBoundaryRespect(e,t){let n=[];return e.socialCues.includes("boundary_setting")&&n.push("respect_stated_boundaries"),e.socialCues.includes("private")&&n.push("avoid_personal_probing"),n.push("maintain_professional_distance","respect_user_autonomy"),n}initializeEmotionLexicon(){[{word:"happy",state:this.createEmotionalState("joy",.8,.6,.6,.7,.8)},{word:"sad",state:this.createEmotionalState("sadness",-.7,.4,.3,.6,.8)},{word:"angry",state:this.createEmotionalState("anger",-.6,.8,.8,.8,.8)},{word:"scared",state:this.createEmotionalState("fear",-.5,.7,.2,.7,.7)},{word:"excited",state:this.createEmotionalState("excitement",.9,.9,.7,.8,.8)},{word:"calm",state:this.createEmotionalState("calm",.3,.2,.5,.4,.8)},{word:"confused",state:this.createEmotionalState("confusion",-.2,.5,.3,.5,.7)},{word:"grateful",state:this.createEmotionalState("gratitude",.7,.4,.4,.6,.8)},{word:"proud",state:this.createEmotionalState("pride",.8,.6,.7,.7,.8)},{word:"lonely",state:this.createEmotionalState("loneliness",-.6,.3,.2,.6,.8)},{word:"hopeful",state:this.createEmotionalState("hope",.6,.5,.5,.6,.7)},{word:"worried",state:this.createEmotionalState("worry",-.4,.6,.3,.6,.7)}].forEach(e=>{let{word:t,state:n}=e;this.emotionLexicon.set(t,n)})}initializeEmpathyStrategies(){[{strategy:"emotional_validation",phrases:["Your feelings are completely valid.","It makes perfect sense that you'd feel this way.","Anyone would feel upset in this situation."]},{strategy:"reassurance_and_safety",phrases:["You're safe here to share whatever you're feeling.","It's okay to feel uncertain about this.","We can work through this step by step."]},{strategy:"acknowledgment_and_understanding",phrases:["I can understand why that would be frustrating.","Your feelings about this are completely valid.","It sounds like this situation is really challenging."]},{strategy:"active_listening",phrases:["I'm here to listen.","Tell me more about how you're feeling.","I want to understand what you're going through."]},{strategy:"gentle_encouragement",phrases:["You're doing great by talking about this.","It takes courage to share these feelings.","You're not alone in this."]},{strategy:"positive_reinforcement",phrases:["That's wonderful to hear!","I'm so happy for you!","What an exciting development!"]}].forEach(e=>{let{strategy:t,phrases:n}=e;this.empathyStrategies.set(t,n)})}initializeSocialCues(){[{cue:"polite",indicators:["please","thank you","thanks","excuse me"]},{cue:"urgent",indicators:["urgent","asap","quickly","immediately"]},{cue:"uncertain",indicators:["maybe","perhaps","not sure","think"]},{cue:"confident",indicators:["definitely","absolutely","certain","sure"]},{cue:"support_seeking",indicators:["help","advice","support","guidance"]},{cue:"sharing",indicators:["tell you","share","story","experience"]}].forEach(e=>{let{cue:t,indicators:n}=e;this.socialCues.set(t,n)})}createEmotionalState(e,t,n,i,o,a){return{primary:e,secondary:[],valence:t,arousal:n,dominance:i,intensity:o,confidence:a}}updateEmotionalHistory(e){this.conversationMoodHistory.length>=10&&this.conversationMoodHistory.shift(),this.conversationMoodHistory.push(e.primary)}updateConversationMood(e){this.conversationMoodHistory.push(e),this.conversationMoodHistory.length>20&&this.conversationMoodHistory.shift()}getRecentEmotionalHistory(){return this.conversationMoodHistory.slice(-5).map(e=>this.createEmotionalState(e,0,.5,.5,.5,.7))}constructor(){this.emotionLexicon=new Map,this.emotionalPatterns=new Map,this.empathyStrategies=new Map,this.socialCues=new Map,this.conversationMoodHistory=[],this.initializeEmotionLexicon(),this.initializeEmpathyStrategies(),this.initializeSocialCues()}}class v{async initialize(){try{console.log("\uD83D\uDE80 Initializing PrimeLM Core..."),this.embeddingPipeline=await (0,a.TkF)("feature-extraction","Xenova/all-MiniLM-L6-v2"),await this.bootstrapChatbotKnowledge(),this.isInitialized=!0,console.log("✅ PrimeLM Core initialized successfully")}catch(e){throw console.error("❌ Failed to initialize PrimeLM Core:",e),e}}async bootstrapChatbotKnowledge(){if(!this.embeddingPipeline)throw Error("Embedding pipeline not initialized");try{let e=new s(this.embeddingPipeline);this.knowledgeBase=await e.bootstrapFromTokenizer(),this.embeddingsModel.vocabulary=this.knowledgeBase.conceptEmbeddings,this.embeddingsModel.concepts=this.knowledgeBase.conceptEmbeddings,this.embeddingsModel.relationships=this.knowledgeBase.semanticClusters,this.populateChatbotIdentity()}catch(e){throw console.error("❌ Knowledge bootstrap failed:",e),Error("Knowledge bootstrap failed: ".concat(e instanceof Error?e.message:String(e)))}}populateChatbotIdentity(){if(!this.knowledgeBase)return;let e={},t=[];for(let n of this.knowledgeBase.vocabulary.values())Object.entries(n.primeFactors).forEach(t=>{let[n,i]=t,o=parseInt(n);e[o]=(e[o]||0)+i}),t.push(n.embedding);if(t.length>0){let n=this.calculateCentroidEmbedding(t);this.chatbotUser.identity.embeddings=n,this.chatbotUser.identity.primeFactors=e}}calculateCentroidEmbedding(e){if(0===e.length)return Array(384).fill(0);let t=Array(e[0].length).fill(0);return e.forEach(e=>{e.forEach((e,n)=>{t[n]+=e})}),t.map(t=>t/e.length)}async processConversation(e){if(!this.isInitialized||!this.embeddingPipeline)throw Error("PrimeCore not initialized");console.log('\uD83D\uDD2C Processing input: "'.concat(e,'"'));let t=await this.generateEmbeddings(e),n=c.embeddingsToPrimes(t);this.updateUserState(this.humanUser,e,t,n);let i=this.generateResponsePrimes(n),o=await this.generateResponseText(i),a=await this.generateEmbeddings(o);return this.updateUserState(this.chatbotUser,o,a,i),console.log('✅ Generated response: "'.concat(o,'"')),o}async generateEmbeddings(e){if(!this.embeddingPipeline)throw Error("Embedding pipeline not initialized");return Array.from((await this.embeddingPipeline(e)).data)}updateUserState(e,t,n,i){e.conversationState.embeddings=n,e.conversationState.primeFactors=i,e.conversationState.context.push(t),e.conversationState.turnCount++,e.conversationState.context.length>10&&(e.conversationState.context=e.conversationState.context.slice(-10)),0===e.identity.embeddings.length?(e.identity.embeddings=[...n],e.identity.primeFactors={...i}):(e.identity.embeddings=e.identity.embeddings.map((e,t)=>.9*e+.1*n[t]),e.identity.primeFactors=c.combineFactors(e.identity.primeFactors,i,.9)),this.updateEmbeddingsModel(t,n)}updateEmbeddingsModel(e,t){let n=e.toLowerCase().split(/\W+/).filter(e=>e.length>2);n.forEach(e=>{this.embeddingsModel.vocabulary.set(e,[...t]),e.length>4&&this.embeddingsModel.concepts.set(e,[...t])}),n.length>1&&n.forEach((e,t)=>{let i=n.filter((e,n)=>n!==t);this.embeddingsModel.relationships.set(e,i)})}generateResponsePrimes(e){let t,n=c.calculateCoherence(e,this.chatbotUser.conversationState.primeFactors);return console.log("\uD83E\uDDEE Coherence score: ".concat((100*n).toFixed(1),"%")),t=n>.1?this.amplifyResonance(e):this.createHarmonic(e),t=this.addPersonalityFactors(t)}amplifyResonance(e){let t={};Object.entries(e).forEach(e=>{let[n,i]=e;t[parseInt(n)]=Math.floor(1.3*i)});let n=c.generatePrimes(100);return t[n[10]]=8,t[n[15]]=6,t}createHarmonic(e){let t={};Object.entries(e).sort((e,t)=>{let[,n]=e,[,i]=t;return i-n}).slice(0,5).forEach(e=>{let[n,i]=e;t[parseInt(n)+2]=Math.floor(.7*i)});let n=c.generatePrimes(50);return t[n[5]]=10,t[n[8]]=8,t}addPersonalityFactors(e){let t={...e},n=c.generatePrimes(30);return t[n[12]]=5,t[n[18]]=4,t[n[22]]=3,t}async generateResponseText(e){if(console.log("\uD83D\uDD0D Generating response text using Phase 3: Full 8-Layer Architecture..."),console.log("Knowledge base available:",!!this.knowledgeBase),!this.knowledgeBase)throw console.log("⚠️ No knowledge base available"),Error("No knowledge base available - bootstrap failed");let t=this.humanUser.conversationState.context[this.humanUser.conversationState.context.length-1],n=this.semanticLayer.analyzeSemanticContext(t),i=this.pragmaticLayer.getContextForResponse();i.currentTopic,i.activeIntents,Object.entries(i.relevantEntities),i.conversationGoals,i.recentHistory,this.pragmaticLayer.processTurn("human",t,n.intent,n.entities.reduce((e,t,n)=>(e["entity_".concat(n)]=t,e),{}),n);let o=this.pragmaticLayer.getContextForResponse(),a={currentTopic:o.currentTopic,activeIntents:o.activeIntents,entityMemory:new Map(Object.entries(o.relevantEntities)),conversationGoals:o.conversationGoals,userPreferences:{},conversationHistory:o.recentHistory},s=this.discourseLayer.analyzeDiscourseContext(t,n,a),c=this.emotionalIntelligenceLayer.analyzeEmotionalContent(t,{conversationHistory:a.conversationHistory,currentTopic:a.currentTopic});this.episodicMemoryLayer.storeEpisode("conversation",{summary:'User said: "'.concat(t,'"'),details:{intent:n.intent,entities:n.entities,emotionalState:c.userEmotion},participants:["human","chatbot"],context:s.conversationPhase||"general"},{valence:c.userEmotion.valence,arousal:c.userEmotion.arousal,dominance:c.userEmotion.dominance,emotions:[c.userEmotion.primary,...c.userEmotion.secondary]},c.empathyLevel);let l=this.emotionalIntelligenceLayer.generateEmotionalResponse(c,""),h={responseType:s.expectedResponseType,semanticContext:n,discourseContext:s,pragmaticContext:a,primeResonance:e},u=this.generativeLayer.generateResponse(h);if(u&&(u=this.enhanceResponseWithEmotionalIntelligence(u,l,c)),u)return console.log("\uD83C\uDFA8 Generated dynamic response:",u),u;console.log("Vocabulary size:",this.knowledgeBase.vocabulary.size),console.log("Vocabulary primes available:",this.knowledgeBase.vocabularyPrimes.size);let d=new r,m=d.findMostResonantWords(e,this.knowledgeBase.vocabularyPrimes,5),p=d.applyContextualWeighting(m,this.humanUser.conversationState.context,1.5),y=this.semanticLayer.enhanceResonanceWithSemantics(p.map(e=>({word:e.word,resonance:e.resonance})),n);if(console.log("Resonant words found:",y.map(e=>"".concat(e.word,": ").concat(e.resonance.toFixed(1)))),y.length>0){let t=p.map(e=>{let t=y.find(t=>t.word===e.word);return{...e,resonance:t?t.resonance:e.resonance}}).sort((e,t)=>t.resonance-e.resonance),i=this.generateSemanticResonanceResponse(t,n,e);return console.log("Generated semantic-resonance response:",i),i}return console.log("No resonant words found, using basic response"),this.generateBasicResponse(e)}primesToEmbeddings(e){let t=Array(384).fill(0),n=c.generatePrimes(384);return Object.entries(e).forEach(e=>{let[i,o]=e,a=parseInt(i),s=n.indexOf(a);-1!==s&&(t[s]=o/1e3)}),t}findClosestConcept(e){let t=null,n=-1;for(let[i,o]of this.embeddingsModel.concepts){let a=this.calculateCosineSimilarity(e,o);a>n&&(n=a,t=i)}return n>.3?t:null}calculateCosineSimilarity(e,t){let n=e.reduce((e,n,i)=>e+n*t[i],0),i=Math.sqrt(e.reduce((e,t)=>e+t*t,0)),o=Math.sqrt(t.reduce((e,t)=>e+t*t,0));return i&&o?n/(i*o):0}async generateTextFromConcept(e,t){let n=c.calculateMagnitude(t),i=this.getConceptVariations(e),o=Math.floor(n/10)%i.length;return i[o]}getConceptVariations(e){let t={};for(let[n]of this.embeddingsModel.vocabulary)t[e]||(t[e]=[]),t[e].push("I understand you're interested in ".concat(n,". Let me help with that."));return t[e]||["I'm processing information related to ".concat(e,".")]}findMostSimilarConcepts(e,t){let n=[];for(let[t,i]of this.embeddingsModel.concepts){let o=this.calculateCosineSimilarity(e,i);n.push({concept:t,similarity:o})}let i=n.sort((e,t)=>t.similarity-e.similarity);console.log("Top similarities:",i.slice(0,5).map(e=>"".concat(e.concept,": ").concat(e.similarity.toFixed(3))));let o=i.slice(0,t).filter(e=>e.similarity>.01);return console.log("Filtered similar concepts:",o.map(e=>"".concat(e.concept,": ").concat(e.similarity.toFixed(3)))),o.map(e=>e.concept)}generateSemanticResonanceResponse(e,t,n){console.log("\uD83C\uDFAD Generating semantic-enhanced resonance response..."),console.log("Intent:",t.intent),console.log("Semantic boosts:",t.semanticBoosts);let i=e[0];switch(t.intent){case"GREETING":if("hello"===i.word||t.semanticBoosts.includes("hello"))return"Hello! I'm PrimeBot. How can I help you today?";return"Hello! Nice to meet you. I'm PrimeBot, powered by mathematical prime factorization.";case"IDENTITY_INTRODUCTION":if(t.entities.length>0){let e=t.entities[0];return"Nice to meet you, ".concat(e,"! I'm PrimeBot. How can I assist you today?")}return"Nice to meet you! I'm PrimeBot. What's your name?";case"ENTITY_INTRODUCTION":if(t.entities.length>=2){let e=t.entities[0],n=t.entities[1];return"Nice to know that your ".concat(e," is named ").concat(n,"! Tell me more about ").concat(n,".")}return"That's interesting! Tell me more about that.";case"IDENTITY_QUERY":let o=this.humanUser.conversationState.context.join(" ").toLowerCase().match(/my name is (\w+)/i);if(o)return"Based on our conversation, your name is ".concat(o[1],". Is that correct?");return"I don't recall you mentioning your name. What is your name?";case"HELP_REQUEST":return"I'm here to help! What would you like to know or discuss?";case"GRATITUDE":return"You're welcome! I'm glad I could help.";case"POSITIVE_FEEDBACK":return"That's wonderful! Is there anything else I can help you with?";case"INFORMATION_REQUEST":case"QUESTION":if(i&&i.resonance>1e3)return"I'm analyzing the concept of \"".concat(i.word,'" to answer your question. What specifically would you like to know?');return"That's a great question! I'm processing the mathematical patterns to provide you with an answer.";case"KNOWLEDGE_REQUEST":return"I process information through mathematical analysis. What would you like me to understand?";default:if(i){if(t.semanticBoosts.includes(i.word))return"I notice you're particularly interested in \"".concat(i.word,"\". The mathematical resonance is strong here. Tell me more about what you'd like to explore!");if(i.resonance>2e3)return'The concept of "'.concat(i.word,'" resonates powerfully with my understanding. How can I help you explore this further?');return"I'm processing the mathematical patterns related to \"".concat(i.word,'". What would you like to know about this?')}return"I'm analyzing the semantic and mathematical patterns in your message. Could you tell me more?"}}generateResonanceBasedResponse(e,t){let n=e[0];if(c.calculateMagnitude(t),console.log("\uD83C\uDFAF Generating response for primary resonant word:",n.word),console.log("\uD83D\uDD22 Resonance score:",n.resonance.toFixed(1)),console.log("\uD83D\uDD17 Shared primes:",n.sharedPrimes),console.log("\uD83C\uDFB5 Harmonic matches:",n.harmonicMatches),"hello"===n.word||"hi"===n.word)return"Hello! I'm PrimeBot. How can I help you today?";if("help"===n.word||"assist"===n.word)return"I'm here to help! What would you like to know or discuss?";if("thanks"===n.word||"thank"===n.word)return"You're welcome! I'm glad I could help.";if("good"===n.word||"great"===n.word)return"That's wonderful! Is there anything else I can help you with?";if("name"===n.word||e.some(e=>"name"===e.word)){let e=this.humanUser.conversationState.context.join(" ").toLowerCase();return e.includes("alex")||e.includes("my name is")?"Nice to meet you, Alex! I'm PrimeBot. How can I assist you today?":"I'm PrimeBot, an AI assistant powered by mathematical prime factorization. What's your name?"}if("understand"===n.word||"know"===n.word)return"I process information through mathematical analysis. What would you like me to understand?";if("what"===n.word||e.some(e=>"what"===e.word)){let e=this.humanUser.conversationState.context.join(" ").toLowerCase();return e.includes("what is my name")||e.includes("my name")?"Based on our conversation, your name is Alex. Is that correct?":"That's a great question! I'm processing the mathematical patterns to provide you with an answer."}if(n.sharedPrimes.length>0){let e=n.sharedPrimes.length,t=n.harmonicMatches.length;if(e>=3)return'I sense strong mathematical resonance with "'.concat(n.word,'". Our prime factors align beautifully. What would you like to explore about this?');if(t>0)return'I detect harmonic relationships with "'.concat(n.word,"\". There's an interesting mathematical connection here. Tell me more!")}if(n.resonance>100)return'The concept of "'.concat(n.word,'" resonates strongly with my mathematical understanding. How can I help you with this?');if(e.length>1){let t=e[1];return"I'm processing the mathematical relationship between \"".concat(n.word,'" and "').concat(t.word,'". What specifically interests you about these concepts?')}return"I'm analyzing the prime factorization patterns related to \"".concat(n.word,"\". Could you tell me more about what you'd like to know?")}generateConceptBasedResponse(e,t){let n=c.calculateMagnitude(t),i=e[0],o=this.embeddingsModel.relationships.get(i)||[];if(console.log("\uD83C\uDFAF Generating response for primary concept:",i),console.log("\uD83D\uDD17 Related concepts:",o),"hello"===i||"hi"===i)return"Hello! I'm PrimeBot. How can I help you today?";if("help"===i||"assist"===i)return"I'm here to help! What would you like to know or discuss?";if("thanks"===i||"thank"===i)return"You're welcome! I'm glad I could help.";if("good"===i||"great"===i)return"That's wonderful! Is there anything else I can help you with?";if("name"===i||e.includes("name")){let e=this.humanUser.conversationState.context.join(" ").toLowerCase();return e.includes("alex")||e.includes("my name is")?"Nice to meet you, Alex! I'm PrimeBot. How can I assist you today?":"I'm PrimeBot, an AI assistant powered by mathematical prime factorization. What's your name?"}if("understand"===i||"know"===i)return"I process information through mathematical analysis. What would you like me to understand?";if("what"===i||e.includes("what")){let e=this.humanUser.conversationState.context.join(" ").toLowerCase();return e.includes("what is my name")||e.includes("my name")?"Based on our conversation, your name is Alex. Is that correct?":"That's a great question! I'm processing the mathematical patterns to provide you with an answer."}if(o.length>0){let e=o[Math.floor(n)%o.length];return"count"===i&&o.includes("number")?"I see you're working with numbers and counting. How can I help you with mathematical calculations?":"play"===i&&o.includes("work")?"I understand the balance between work and play. What would you like to explore or discuss?":"I notice you're interested in ".concat(i,". In my understanding, this connects to ").concat(e,". What specifically would you like to know?")}return"I'm processing the concept of \"".concat(i,"\" through my mathematical framework. Could you tell me more about what you'd like to explore?")}generateBasicResponse(e){let t=c.calculateMagnitude(e),n=Object.keys(e).length,i=Object.entries(e).sort((e,t)=>{let[,n]=e,[,i]=t;return i-n})[0];if(t>1e3)return"I detect strong mathematical patterns in your message. The prime factorization suggests complex semantic content. How can I help you explore this further?";if(t>500)return"I'm analyzing the mathematical structure of your input. The prime resonance indicates meaningful content. What would you like to discuss?";if(n>5)return"I notice rich mathematical diversity in the prime factors. This suggests multifaceted meaning. Tell me more about what interests you.";if(i&&parseInt(i[0])>100)return"The dominant prime factor ".concat(i[0]," suggests sophisticated semantic content. I'm ready to engage with your ideas.");let o=this.humanUser.conversationState.turnCount;if(1===o)return"Welcome! I'm PrimeLM, processing your input through mathematical prime factorization. What would you like to explore together?";if(o<5)return"I'm building our conversational context through mathematical analysis. What aspects would you like to delve deeper into?";let a=["I'm processing the mathematical relationships in your message. Could you elaborate on what interests you most?","The prime factorization reveals interesting patterns. What specific aspects would you like to explore?","I'm analyzing the semantic-mathematical bridge in your input. How can I assist you further?","The mathematical coherence suggests meaningful content. What would you like to focus on?","I'm translating your input through prime mathematics. What direction shall we take our conversation?"];return a[Math.floor(t)%a.length]}enhanceResponseWithEmotionalIntelligence(e,t,n){console.log("❤️ Enhancing response with emotional intelligence..."),console.log("Emotional strategy:",t.empathyStrategy),console.log("Support level:",t.supportLevel),console.log("Tonal adjustments:",t.tonalAdjustments);let i=e,{warmth:o,formality:a,enthusiasm:s,patience:r}=t.tonalAdjustments;switch(o>.7&&!i.includes("understand")&&!i.includes("feel")&&(i="I understand how you feel. ".concat(i)),a<.4&&(i=i.replace(/\. /g,"! ")),s>.7&&!i.includes("!")&&(i=i.replace(/\.$/,"!")),r>.8&&"high"===n.supportNeeded&&(i+=" Take your time, and let me know if you need anything else."),t.empathyStrategy){case"emotional_validation":i.includes("valid")||i.includes("understand")||(i="Your feelings are completely valid. ".concat(i));break;case"reassurance_and_safety":("fear"===n.userEmotion.primary||"anxiety"===n.userEmotion.primary)&&(i+=" You're safe here to share whatever you're feeling.");break;case"gentle_encouragement":i.includes("great")||i.includes("wonderful")||(i="You're doing great by sharing this. ".concat(i))}return this.episodicMemoryLayer.storeEpisode("conversation",{summary:'Bot responded: "'.concat(i,'"'),details:{originalResponse:e,emotionalEnhancements:{strategy:t.empathyStrategy,tonalAdjustments:t.tonalAdjustments}},participants:["chatbot","human"],context:"response_generation"},t.responseEmotion,.6),console.log("❤️ Enhanced response:",i),i}getDebugInfo(){return{humanUser:{identity:this.humanUser.identity,conversationState:{...this.humanUser.conversationState,primeCount:Object.keys(this.humanUser.conversationState.primeFactors).length}},chatbotUser:{identity:this.chatbotUser.identity,conversationState:{...this.chatbotUser.conversationState,primeCount:Object.keys(this.chatbotUser.conversationState.primeFactors).length}},coherence:c.calculateCoherence(this.humanUser.conversationState.primeFactors,this.chatbotUser.conversationState.primeFactors),episodicMemory:{totalEpisodes:this.episodicMemoryLayer.getMemoryStats().totalEpisodes,personalityTraits:this.episodicMemoryLayer.getPersonalityInsights().traits}}}constructor(){this.embeddingPipeline=null,this.isInitialized=!1,this.knowledgeBase=null,this.humanUser={identity:{id:"human-001",name:"Human",type:"human",embeddings:[],primeFactors:{},personality:{traits:["curious","conversational"],communicationStyle:"direct",interests:[]}},conversationState:{embeddings:[],primeFactors:{},context:[],turnCount:0},preferences:{topics:[],responseLength:"medium"}},this.chatbotUser={identity:{id:"chatbot-001",name:"PrimeBot",type:"chatbot",embeddings:[],primeFactors:{},personality:{traits:["helpful","analytical","mathematical"],communicationStyle:"thoughtful",interests:["mathematics","conversation","learning"]}},conversationState:{embeddings:[],primeFactors:{},context:[],turnCount:0},preferences:{topics:["mathematics","prime numbers","conversation"],responseLength:"medium"}},this.embeddingsModel={vocabulary:new Map,concepts:new Map,relationships:new Map},this.semanticLayer=new h,this.pragmaticLayer=new u,this.schemaVocabulary=new l,this.discourseLayer=new d(this.schemaVocabulary),this.generativeLayer=new m(this.schemaVocabulary),this.episodicMemoryLayer=new f,this.emotionalIntelligenceLayer=new w}}function b(e){let{primeCore:t,showDebug:n}=e;if(!n||!t)return null;let o=t.getDebugInfo();return(0,i.jsxs)("div",{className:"mt-4 p-4 bg-gray-50 rounded-lg text-sm",children:[(0,i.jsx)("h3",{className:"font-semibold text-gray-700 mb-3",children:"Prime Core Debug Info"}),(0,i.jsxs)("div",{className:"grid grid-cols-1 md:grid-cols-2 gap-4",children:[(0,i.jsxs)("div",{children:[(0,i.jsx)("h4",{className:"font-medium text-blue-600 mb-2",children:"Human User"}),(0,i.jsxs)("div",{className:"space-y-1",children:[(0,i.jsxs)("div",{className:"bg-blue-100 px-2 py-1 rounded",children:["ID: ",o.humanUser.identity.id]}),(0,i.jsxs)("div",{className:"bg-blue-100 px-2 py-1 rounded",children:["Turns: ",o.humanUser.conversationState.turnCount]}),(0,i.jsxs)("div",{className:"bg-blue-100 px-2 py-1 rounded",children:["Prime Factors: ",o.humanUser.conversationState.primeCount]}),(0,i.jsxs)("div",{className:"bg-blue-100 px-2 py-1 rounded text-xs",children:["Traits: ",o.humanUser.identity.personality.traits.join(", ")]})]})]}),(0,i.jsxs)("div",{children:[(0,i.jsx)("h4",{className:"font-medium text-purple-600 mb-2",children:"Chatbot User"}),(0,i.jsxs)("div",{className:"space-y-1",children:[(0,i.jsxs)("div",{className:"bg-purple-100 px-2 py-1 rounded",children:["ID: ",o.chatbotUser.identity.id]}),(0,i.jsxs)("div",{className:"bg-purple-100 px-2 py-1 rounded",children:["Turns: ",o.chatbotUser.conversationState.turnCount]}),(0,i.jsxs)("div",{className:"bg-purple-100 px-2 py-1 rounded",children:["Prime Factors: ",o.chatbotUser.conversationState.primeCount]}),(0,i.jsxs)("div",{className:"bg-purple-100 px-2 py-1 rounded text-xs",children:["Traits: ",o.chatbotUser.identity.personality.traits.join(", ")]})]})]})]}),(0,i.jsx)("div",{className:"mt-3 pt-3 border-t border-gray-200",children:(0,i.jsxs)("div",{className:"flex items-center justify-between",children:[(0,i.jsx)("span",{className:"font-medium text-gray-700",children:"Conversation Coherence:"}),(0,i.jsxs)("span",{className:"bg-green-100 px-3 py-1 rounded font-mono",children:[(100*o.coherence).toFixed(1),"%"]})]})})]})}function I(e){let{message:t,showPrimes:n}=e,o="human"===t.sender;return(0,i.jsx)("div",{className:"flex ".concat(o?"justify-end":"justify-start"," mb-4"),children:(0,i.jsxs)("div",{className:"max-w-xs lg:max-w-md px-4 py-2 rounded-lg ".concat(o?"bg-blue-500 text-white":"bg-gray-200 text-gray-800"),children:[(0,i.jsx)("div",{className:"text-sm font-medium mb-1",children:o?"You":"PrimeBot"}),(0,i.jsx)("div",{children:t.text}),n&&t.primeFactors&&(0,i.jsxs)("div",{className:"mt-2 pt-2 border-t border-opacity-20 border-white",children:[(0,i.jsxs)("div",{className:"text-xs opacity-75",children:["Prime Factors: ",Object.keys(t.primeFactors).length]}),void 0!==t.coherence&&(0,i.jsxs)("div",{className:"text-xs opacity-75",children:["Coherence: ",(100*t.coherence).toFixed(1),"%"]})]})]})})}function x(){let[e,t]=(0,o.useState)(null),[n,a]=(0,o.useState)(!0),[s,r]=(0,o.useState)(null),[c,l]=(0,o.useState)([]),[h,u]=(0,o.useState)(""),[d,m]=(0,o.useState)(!1),[p,y]=(0,o.useState)(!0),[g,f]=(0,o.useState)(!1),w=(0,o.useRef)(null);(0,o.useEffect)(()=>{(async()=>{try{console.log("\uD83D\uDE80 Starting PrimeLM initialization...");let e=new v;await e.initialize(),t(e),a(!1),l([{id:"1",text:"Hello! I'm PrimeBot, powered by PrimeLM's Prime Core. I process conversation through mathematical prime factorization. Try asking me something!",sender:"chatbot",timestamp:new Date}])}catch(e){console.error("❌ Failed to initialize PrimeLM:",e),r(e instanceof Error?e.message:"Unknown error"),a(!1)}})()},[]),(0,o.useEffect)(()=>{var e;null==(e=w.current)||e.scrollIntoView({behavior:"smooth"})},[c]);let x=async()=>{if(!h.trim()||!e||d)return;let t={id:Date.now().toString(),text:h.trim(),sender:"human",timestamp:new Date};l(e=>[...e,t]),u(""),m(!0);try{let t=await e.processConversation(h.trim()),n=e.getDebugInfo(),i={id:(Date.now()+1).toString(),text:t,sender:"chatbot",timestamp:new Date,primeFactors:n.chatbotUser.conversationState.primeFactors,coherence:n.coherence};l(e=>[...e,i])}catch(t){console.error("❌ Error processing message:",t);let e={id:(Date.now()+1).toString(),text:"Sorry, I encountered an error processing your message. Please try again.",sender:"chatbot",timestamp:new Date};l(t=>[...t,e])}finally{m(!1)}};return n?(0,i.jsx)("div",{className:"min-h-screen bg-gray-100 flex items-center justify-center",children:(0,i.jsxs)("div",{className:"text-center",children:[(0,i.jsx)("div",{className:"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mx-auto mb-4"}),(0,i.jsx)("h2",{className:"text-xl font-semibold text-gray-700 mb-2",children:"Initializing PrimeLM Core"}),(0,i.jsx)("p",{className:"text-gray-500",children:"Loading neural network models and prime mathematics..."})]})}):s?(0,i.jsx)("div",{className:"min-h-screen bg-gray-100 flex items-center justify-center",children:(0,i.jsxs)("div",{className:"text-center max-w-md",children:[(0,i.jsx)("div",{className:"text-red-500 text-6xl mb-4",children:"⚠️"}),(0,i.jsx)("h2",{className:"text-xl font-semibold text-red-600 mb-2",children:"Initialization Failed"}),(0,i.jsx)("p",{className:"text-gray-600 mb-4",children:s}),(0,i.jsxs)("p",{className:"text-sm text-gray-500",children:["Make sure you have installed the required dependencies:",(0,i.jsx)("br",{}),(0,i.jsx)("code",{className:"bg-gray-200 px-2 py-1 rounded mt-2 inline-block",children:"npm install @xenova/transformers"})]}),(0,i.jsx)("button",{onClick:()=>window.location.reload(),className:"mt-4 bg-blue-500 text-white px-4 py-2 rounded hover:bg-blue-600",children:"Retry"})]})}):(0,i.jsx)("div",{className:"min-h-screen bg-gray-100",children:(0,i.jsxs)("div",{className:"max-w-4xl mx-auto p-4",children:[(0,i.jsx)("div",{className:"bg-white rounded-lg shadow-sm p-6 mb-4",children:(0,i.jsxs)("div",{className:"flex items-center justify-between",children:[(0,i.jsxs)("div",{children:[(0,i.jsx)("h1",{className:"text-2xl font-bold text-gray-800",children:"PrimeLM Demo"}),(0,i.jsx)("p",{className:"text-gray-600",children:"Conversational AI through Prime Core mathematics"})]}),(0,i.jsxs)("div",{className:"flex gap-2",children:[(0,i.jsx)("button",{onClick:()=>y(!p),className:"px-3 py-1 rounded text-sm ".concat(p?"bg-blue-500 text-white":"bg-gray-200 text-gray-700"),children:"Debug"}),(0,i.jsx)("button",{onClick:()=>f(!g),className:"px-3 py-1 rounded text-sm ".concat(g?"bg-purple-500 text-white":"bg-gray-200 text-gray-700"),children:"Primes"})]})]})}),(0,i.jsxs)("div",{className:"bg-white rounded-lg shadow-sm mb-4",children:[(0,i.jsxs)("div",{className:"h-96 overflow-y-auto p-4",children:[c.map(e=>(0,i.jsx)(I,{message:e,showPrimes:g},e.id)),d&&(0,i.jsx)("div",{className:"flex justify-start mb-4",children:(0,i.jsx)("div",{className:"bg-gray-200 text-gray-800 max-w-xs lg:max-w-md px-4 py-2 rounded-lg",children:(0,i.jsx)("div",{className:"flex items-center",children:(0,i.jsx)("div",{className:"animate-pulse",children:"Processing through Prime Core..."})})})}),(0,i.jsx)("div",{ref:w})]}),(0,i.jsx)("div",{className:"border-t border-gray-200 p-4",children:(0,i.jsxs)("div",{className:"flex gap-2",children:[(0,i.jsx)("input",{type:"text",value:h,onChange:e=>u(e.target.value),onKeyPress:e=>{"Enter"!==e.key||e.shiftKey||(e.preventDefault(),x())},placeholder:"Type your message...",className:"flex-1 border border-gray-300 rounded-lg px-3 py-2 focus:outline-none focus:ring-2 focus:ring-blue-500",disabled:d}),(0,i.jsx)("button",{onClick:x,disabled:!h.trim()||d,className:"bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed",children:"Send"})]})})]}),(0,i.jsx)(b,{primeCore:e,showDebug:p}),(0,i.jsxs)("div",{className:"text-center text-sm text-gray-500 mt-4",children:[(0,i.jsxs)("p",{children:[(0,i.jsx)("strong",{children:"PrimeLM Demo:"})," Real neural networks → Prime factorization → Mathematical coherence"]}),(0,i.jsx)("p",{className:"mt-1",children:"No mocking or hard-coding - functional proof of concept implementation"})]})]})})}},6837:()=>{},7806:()=>{}},e=>{var t=t=>e(e.s=t);e.O(0,[811,138,31,911,441,684,358],()=>t(1934)),_N_E=e.O()}]);